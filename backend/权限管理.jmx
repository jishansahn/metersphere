<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="authManager" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">D:\toos\apache-jmeter-5.2.1\lib\ext\mysql-connector-java-5.1.25-bin.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="swaggerAPI" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="常量定义" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1747812959">login_name</stringProp>
            <stringProp name="1216985755">password</stringProp>
            <stringProp name="-1545244403">Referer</stringProp>
            <stringProp name="-1924752570">Origin</stringProp>
            <stringProp name="2255304">Host</stringProp>
            <stringProp name="-894832108">projectId</stringProp>
            <stringProp name="100589">env</stringProp>
            <stringProp name="1109191153">deviceID</stringProp>
            <stringProp name="78518">Now</stringProp>
            <stringProp name="-1010580219">openId</stringProp>
            <stringProp name="-836030906">userId</stringProp>
            <stringProp name="-1313938035">timeTag</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1748001193">
              <stringProp name="-1235338271">jiss-admin</stringProp>
              <stringProp name="-1235338271">jiss-admin</stringProp>
              <stringProp name="1677225449">https://ta_test.thinkingdata.cn/</stringProp>
              <stringProp name="1677225449">https://ta_test.thinkingdata.cn/</stringProp>
              <stringProp name="-1602136395">ta_test.thinkingdata.cn</stringProp>
              <stringProp name="48874">181</stringProp>
              <stringProp name="-1555436764">ta_test</stringProp>
              <stringProp name="710018195">e78b778213f7a7e9</stringProp>
              <stringProp name="-2044968860">${__time(yyyy-MM-dd hh:mm:ss,)}</stringProp>
              <stringProp name="34580603">TG-30cc101d-1708-49bc-b709-64a76113913b</stringProp>
              <stringProp name="48789">159</stringProp>
              <stringProp name="-1958278767">${__time(yyyyMMddHHmmssSSS,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 获取路径相关" enabled="false">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import org.apache.jmeter.services.FileServer;
String baseDir=FileServer.getFileServer().getBaseDir();
sep=System.getProperty(&quot;file.separator&quot;);
vars.put(&quot;binPath&quot;,System.getProperty(&quot;user.dir&quot;));
vars.put(&quot;baseDir&quot;,baseDir);
vars.put(&quot;sep&quot;,sep);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell 获取路径相关" enabled="true">
          <stringProp name="BeanShellSampler.query">import org.apache.jmeter.services.FileServer;
String baseDir=FileServer.getFileServer().getBaseDir();
sep=System.getProperty(&quot;file.separator&quot;);
vars.put(&quot;binPath&quot;,System.getProperty(&quot;user.dir&quot;));
vars.put(&quot;baseDir&quot;,baseDir);
vars.put(&quot;sep&quot;,sep);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="默认值设置：域名（环境）、协议等信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate,br</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Requested-With</stringProp>
              <stringProp name="Header.value">XMLHttpRequest</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">${Referer}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">${Origin}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Connection</stringProp>
              <stringProp name="Header.value">keep-alive</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">${Host}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Charset</stringProp>
              <stringProp name="Header.value">UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="认证" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="login_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${login_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">login_name</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="maxInactiveInterval" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">604800</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">maxInactiveInterval</stringProp>
              </elementProp>
              <elementProp name="lang" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">zh_CN</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lang</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/login/auth</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="结果返回是否为：SUCCESS" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="481733669">{&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;SUCCESS&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="数据库链接配置" enabled="true"/>
        <hashTree>
          <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="TaTest测试环境数据库配置" enabled="true">
            <boolProp name="autocommit">true</boolProp>
            <stringProp name="checkQuery">select 1</stringProp>
            <stringProp name="connectionAge">5000</stringProp>
            <stringProp name="connectionProperties"></stringProp>
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="dbUrl">jdbc:mysql://47.100.36.61:3306</stringProp>
            <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
            <stringProp name="initQuery"></stringProp>
            <boolProp name="keepAlive">true</boolProp>
            <stringProp name="password">ADe47iLoFtR4eERE</stringProp>
            <stringProp name="poolMax">10</stringProp>
            <boolProp name="preinit">false</boolProp>
            <stringProp name="timeout">10000</stringProp>
            <stringProp name="transactionIsolation">DEFAULT</stringProp>
            <stringProp name="trimInterval">60000</stringProp>
            <stringProp name="username">ta</stringProp>
          </JDBCDataSource>
          <hashTree/>
          <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="Ta_test测试环境数据库配置" enabled="false">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="query"></stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCPreProcessor>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="随机获取一个条件分群ID" enabled="false">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="query">select id,display_name,cluster_name,remarks,users_num from ta.ta_user_cluster where project_id=127 and open_id = &quot;TG-2e97f457-ebc0-4d70-a3ca-b12e1076aa2f&quot; and cluster_catalog = 0 order by RAND() limit 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">clusterId,display_name,cluster_name,remarks,users_num</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取当前账户创建的随机看板ID" enabled="false">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select dashbord_id,dashbord_name from ta.ta_event_dashbord where project_id=${projectId} and 
open_id =&quot;${openId}&quot; and stauts=1 order by RAND() limit 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dashbordId,dashbordName</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="模型元数据加载" enabled="true"/>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-53701961">eventName_1</stringProp>
              <stringProp name="-53701960">eventName_2</stringProp>
              <stringProp name="-53701959">eventName_3</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-197082332">
                <stringProp name="-10718655">player_register</stringProp>
                <stringProp name="83853451">player_login</stringProp>
                <stringProp name="-786681338">payment</stringProp>
              </collectionProp>
              <collectionProp name="24903448">
                <stringProp name="0"></stringProp>
                <stringProp name="0"></stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取事件的统计维度" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;events&quot;: [{&#xd;
			&quot;eventName&quot;: &quot;${eventName_1}&quot;,&#xd;
			&quot;eventType&quot;: &quot;event&quot;&#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/event/model/meta/loadPropQuotas?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_code" enabled="true">
              <stringProp name="JSON_PATH">$.return_code</stringProp>
              <stringProp name="EXPECTED_VALUE">0</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取单个事件属性" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;events&quot;: [{&#xd;
			&quot;eventName&quot;: &quot;${eventName_1}&quot;,&#xd;
			&quot;eventType&quot;: &quot;event&quot;&#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/event/model/meta/loadFiltProps?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_code" enabled="true">
              <stringProp name="JSON_PATH">$.return_code</stringProp>
              <stringProp name="EXPECTED_VALUE">0</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取任意事件属性" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;events&quot;: [{&#xd;
			&quot;eventId&quot;: -1,&#xd;
			&quot;eventName&quot;: &quot;anyEvent&quot;,&#xd;
			&quot;eventType&quot;: &quot;event&quot;&#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/event/model/meta/loadFiltProps?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_code" enabled="true">
              <stringProp name="JSON_PATH">$.return_code</stringProp>
              <stringProp name="EXPECTED_VALUE">0</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取全事件属性" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;events&quot;: [{&#xd;
			&quot;eventName&quot;: &quot;${eventName_1}&quot;,&#xd;
			&quot;eventType&quot;: &quot;event&quot;&#xd;
		}, {&#xd;
			&quot;eventName&quot;: &quot;${eventName_2}&quot;,&#xd;
			&quot;eventType&quot;: &quot;event&quot;&#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/event/model/meta/loadFiltProps?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_code" enabled="true">
              <stringProp name="JSON_PATH">$.return_code</stringProp>
              <stringProp name="EXPECTED_VALUE">0</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="元数据" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="用户属性管理" enabled="true"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1988515800">tableType</stringProp>
                <stringProp name="1385214761">metaDataType</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1288456002">
                  <stringProp name="-1504405092">table_user</stringProp>
                  <stringProp name="-942590007">user_property</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户属性-查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;tableType&quot;: &quot;${tableType}&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/searchMetaProp?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="返回中获取第一个属性的参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">propId;propType;columnDesc;unit</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].propId;$.data[0].propType;$.data[0].columnDesc;$.data[0].unit</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;&quot;&quot;;&quot;&quot;;&quot;&quot;</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户属性-编辑" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;propId&quot;: ${propId},&#xd;
		&quot;mixPropType&quot;: &quot;${propType}&quot;,&#xd;
		&quot;isHide&quot;: false,&#xd;
		&quot;columnDesc&quot;: &quot;属性名-编辑&quot;,&#xd;
		&quot;unit&quot;: &quot;个&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/editMetaProp?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户属性-显示名批量上传" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${baseDir}${sep}data${sep}用户属性-显示.csv" elementType="HTTPFileArg">
                    <stringProp name="File.path">${baseDir}${sep}data${sep}用户属性-显示.csv</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="metaDataType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${metaDataType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metaDataType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/uploadMetaDataDisplayNames</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户属性-显示名批量下载" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/downloadMetaDataDisplayNames?metaDataType=${metaDataType}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.jmeter.services.FileServer;

String baseDir=FileServer.getFileServer().getBaseDir();
sep=System.getProperty(&quot;file.separator&quot;);

byte[] result = prev.getResponseData();
String file_name = baseDir+sep+&quot;data&quot;+sep+&quot;download-user-prop-name.csv&quot;;
File file = new File(file_name);
FileOutputStream out = new FileOutputStream(file);
out.write(result);
out.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言status=200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户属性查询-For虚拟属性创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;tableType&quot;: &quot;${tableType}&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/searchSqlSourceMetaProp?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Charset</stringProp>
                    <stringProp name="Header.value">UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="事件属性管理" enabled="true"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1988515800">tableType</stringProp>
                <stringProp name="1385214761">metaDataType</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="439956114">
                  <stringProp name="593395433">table_event</stringProp>
                  <stringProp name="-1950684710">event_property</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件属性-查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;tableType&quot;: &quot;${tableType}&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/searchMetaProp?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Charset</stringProp>
                    <stringProp name="Header.value">UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="返回中获取第一个属性的参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">propId;propType;columnName;columnDesc;unit</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].propId;$.data[0].propType;$.data[0].columnName;$.data[0].columnDesc;$.data[0].unit</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;&quot;&quot;;&quot;&quot;;&quot;&quot;;&quot;&quot;</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件属性对应的元事件搜索" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;propColumn&quot;: {&#xd;
			&quot;propId&quot;: ${propId},&#xd;
			&quot;property&quot;: {&#xd;
				&quot;columnName&quot;: &quot;${columnName}&quot;,&#xd;
				&quot;tableType&quot;: &quot;0&quot;&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/searchMetaEvent?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Charset</stringProp>
                    <stringProp name="Header.value">UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取第一个事件的数据" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">eventId;eventName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.events[0].eventId;$.data.events[0].eventName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;&quot;&quot;</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件属性-编辑" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;propId&quot;: ${propId},&#xd;
		&quot;mixPropType&quot;: &quot;${propType}&quot;,&#xd;
		&quot;isHide&quot;: false,&#xd;
		&quot;columnDesc&quot;: &quot;属性名-编辑&quot;,&#xd;
		&quot;unit&quot;: &quot;个&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/editMetaProp?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">zh-CN</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${Referer}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${Origin}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${Host}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Charset</stringProp>
                    <stringProp name="Header.value">UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件属性-显示名批量下载" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/downloadMetaDataDisplayNames?metaDataType=${metaDataType}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.jmeter.services.FileServer;

String baseDir=FileServer.getFileServer().getBaseDir();
sep=System.getProperty(&quot;file.separator&quot;);

byte[] result = prev.getResponseData();
String file_name = baseDir+sep+&quot;data&quot;+sep+&quot;download-event-prop-name.csv&quot;;
File file = new File(file_name);
FileOutputStream out = new FileOutputStream(file);
out.write(result);
out.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件属性-显示名批量上传" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${baseDir}${sep}data${sep}事件属性-显示名.csv" elementType="HTTPFileArg">
                    <stringProp name="File.path">${baseDir}${sep}data${sep}事件属性-显示名.csv</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="metaDataType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${metaDataType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metaDataType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/uploadMetaDataDisplayNames</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件属性查询-For虚拟属性创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;tableType&quot;: &quot;${tableType}&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/searchSqlSourceMetaProp?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Charset</stringProp>
                    <stringProp name="Header.value">UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="事件管理" enabled="true"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="1385214761">metaDataType</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-203510858">
                  <stringProp name="96891546">event</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="元事件搜索" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/searchMetaEvent?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Charset</stringProp>
                    <stringProp name="Header.value">UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取第一个事件的数据" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">eventId;eventName;eventType</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.events[0].eventId;$.data.events[0].eventName;$.data.events[0].eventType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;&quot;&quot;;&quot;&quot;</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="元事件编辑" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;eventId&quot;: ${eventId},&#xd;
		&quot;eventName&quot;: &quot;${eventName}&quot;,&#xd;
		&quot;eventDesc&quot;: &quot;战斗失败&quot;,&#xd;
		&quot;eventType&quot;: &quot;${eventType}&quot;,&#xd;
		&quot;remark&quot;: &quot;12333备注&quot;,&#xd;
		&quot;isHide&quot;: false&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/editMetaEvent?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Charset</stringProp>
                    <stringProp name="Header.value">UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件属性详情查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;eventId&quot;: ${eventId},&#xd;
		&quot;eventName&quot;: &quot;${eventName}&quot;,&#xd;
		&quot;eventType&quot;: &quot;event&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/listMetaEventProp?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">zh-CN</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${Referer}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${Origin}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${Host}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Charset</stringProp>
                    <stringProp name="Header.value">UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言-包含#zone_offset" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67412099">#zone_offset</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件-显示名批量下载" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/downloadMetaDataDisplayNames?metaDataType=${metaDataType}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.jmeter.services.FileServer;

String baseDir=FileServer.getFileServer().getBaseDir();
sep=System.getProperty(&quot;file.separator&quot;);

byte[] result = prev.getResponseData();
String file_name = baseDir+sep+&quot;data&quot;+sep+&quot;download-event-name.csv&quot;;
File file = new File(file_name);
FileOutputStream out = new FileOutputStream(file);
out.write(result);
out.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件-显示名批量上传" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${baseDir}${sep}data${sep}测试(吉姗姗-2)_事件_显示名.csv" elementType="HTTPFileArg">
                    <stringProp name="File.path">${baseDir}${sep}data${sep}测试(吉姗姗-2)_事件_显示名.csv</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="metaDataType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${metaDataType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metaDataType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/uploadMetaDataDisplayNames</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件/用户属性查询-多ID设置" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/meta/searchVUserIdSourceProp?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="事件属性查询-时区设置" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/meta/searchTzOffsetSourceProp?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="用户属性" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="属性分析加载用户属性" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/user/loadUserProps?&amp;projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言存在props" enabled="true">
              <stringProp name="JSON_PATH">$.data.props</stringProp>
              <stringProp name="EXPECTED_VALUE"></stringProp>
              <boolProp name="JSONVALIDATION">false</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言存在calcusymbol_map" enabled="true">
              <stringProp name="JSON_PATH">$.data.calcusymbol_map</stringProp>
              <stringProp name="EXPECTED_VALUE"></stringProp>
              <boolProp name="JSONVALIDATION">false</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言存在analysis_map" enabled="true">
              <stringProp name="JSON_PATH">$.data.analysis_map</stringProp>
              <stringProp name="EXPECTED_VALUE"></stringProp>
              <boolProp name="JSONVALIDATION">false</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="虚拟属性" enabled="true"/>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-2045228461">v_userProp_name</stringProp>
              <stringProp name="-2045522343">v_userProp_desc</stringProp>
              <stringProp name="1856995212">propId_user</stringProp>
              <stringProp name="-1048250082">uploadParam_user</stringProp>
              <stringProp name="1597629270">v_eventProp_name</stringProp>
              <stringProp name="1597335388">v_eventProp_desc</stringProp>
              <stringProp name="1717589753">propId_event</stringProp>
              <stringProp name="1849298855">uploadParam_event</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1016945705">
                <stringProp name="349307152">#vp@v_account_test</stringProp>
                <stringProp name="1952981136">虚拟用户属性名</stringProp>
                <stringProp name="54213661">93667</stringProp>
                <stringProp name="987861648">{&quot;commonHeader&quot;:{&quot;projectId&quot;:${projectId}},&quot;mainColumn&quot;:{&quot;propId&quot;:${propId_user},&quot;property&quot;:{&quot;columnName&quot;:&quot;user_level&quot;,&quot;tableType&quot;:&quot;1&quot;}}}</stringProp>
                <stringProp name="-651009396">#vp@lifetime</stringProp>
                <stringProp name="-1982972412">用户生命周期</stringProp>
                <stringProp name="1511462">1469</stringProp>
                <stringProp name="-1597053373">{&quot;commonHeader&quot;:{&quot;projectId&quot;:${projectId}},&quot;mainColumn&quot;:{&quot;propId&quot;:${propId_event},&quot;property&quot;:{&quot;columnName&quot;:&quot;channel_id&quot;,&quot;tableType&quot;:&quot;0&quot;}}}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="虚拟属性-用户属性" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-查询虚拟属性" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT v_prop_id FROM ta.ta_project_table_virtual_meta where open_id=&quot;${openId}&quot;
 and project_id=${projectId} and table_type=1 and column_name=&quot;${v_userProp_name}&quot;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">vProId_user</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否已存在虚拟用户属性名称" enabled="true">
              <stringProp name="IfController.condition">${vProId_user_#}&gt;0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式规则删除-用户属性" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://ta_test.thinkingdata.cn/v1/ta/meta/prop/virtual/sql/rule/delete?projectId=${projectId}&amp;vProId=${vProId_user_1}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                  <stringProp name="JSON_PATH">$.return_message</stringProp>
                  <stringProp name="EXPECTED_VALUE">success</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql字段参数校验-用户属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;vprop&quot;: {&#xd;
			&quot;columnDesc&quot;: &quot;${v_userProp_desc}&quot;,&#xd;
			&quot;columnName&quot;: &quot;${v_userProp_name}&quot;,&#xd;
			&quot;tableType&quot;: 1&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/verify/param?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="判断$.data.returnCode=0" enabled="true">
                <stringProp name="JSON_PATH">$.data.returnCode</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式初始校验，返回校验字段-用户属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;sqlExpression&quot;: &quot;concat(\&quot;#account_id\&quot;,user_level)&quot;,&#xd;
		&quot;vprop&quot;: {&#xd;
			&quot;columnDesc&quot;: &quot;${v_userProp_desc}&quot;,&#xd;
			&quot;columnName&quot;: &quot;${v_userProp_name}&quot;,&#xd;
			&quot;selectType&quot;: &quot;string&quot;,&#xd;
			&quot;tableType&quot;: 1&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/verify/init?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="判断$.data.returnCode=0" enabled="true">
                <stringProp name="JSON_PATH">$.data.returnCode</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式计算校验，返回校验字段-用户属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;propertyValues&quot;: [{&#xd;
			&quot;value&quot;: &quot;232333&quot;,&#xd;
			&quot;property&quot;: {&#xd;
				&quot;columnDesc&quot;: &quot;账户ID&quot;,&#xd;
				&quot;columnName&quot;: &quot;#account_id&quot;,&#xd;
				&quot;columnType&quot;: &quot;varchar&quot;,&#xd;
				&quot;selectType&quot;: &quot;string&quot;,&#xd;
				&quot;tableType&quot;: &quot;1&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;value&quot;: &quot;44&quot;,&#xd;
			&quot;property&quot;: {&#xd;
				&quot;columnDesc&quot;: &quot;&quot;,&#xd;
				&quot;columnName&quot;: &quot;user_level&quot;,&#xd;
				&quot;columnType&quot;: &quot;varchar&quot;,&#xd;
				&quot;selectType&quot;: &quot;string&quot;,&#xd;
				&quot;tableType&quot;: &quot;1&quot;&#xd;
			}&#xd;
		}],&#xd;
		&quot;sqlExpression&quot;: &quot;concat(\&quot;#account_id\&quot;,user_level)&quot;,&#xd;
		&quot;vprop&quot;: {&#xd;
			&quot;columnDesc&quot;: &quot;${v_userProp_desc}&quot;,&#xd;
			&quot;columnName&quot;: &quot;${v_userProp_name}&quot;,&#xd;
			&quot;selectType&quot;: &quot;string&quot;,&#xd;
			&quot;tableType&quot;: 1&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/verify/calc?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="判断$.data.returnCode=0" enabled="true">
                <stringProp name="JSON_PATH">$.data.returnCode</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="判断计算结果" enabled="true">
                <stringProp name="JSON_PATH">$.data.result</stringProp>
                <stringProp name="EXPECTED_VALUE">23233344</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式规则创建-用户属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;sqlExpression&quot;: &quot;concat(\&quot;#account_id\&quot;,user_level)&quot;,&#xd;
		&quot;vprop&quot;: {&#xd;
			&quot;propId&quot;: null,&#xd;
			&quot;property&quot;: {&#xd;
				&quot;columnDesc&quot;: &quot;${v_userProp_desc}&quot;,&#xd;
				&quot;columnName&quot;: &quot;${v_userProp_name}&quot;,&#xd;
				&quot;selectType&quot;: &quot;string&quot;,&#xd;
				&quot;tableType&quot;: 1&#xd;
			}&#xd;
		},&#xd;
		&quot;properties&quot;: [{&#xd;
			&quot;columnDesc&quot;: &quot;账户ID&quot;,&#xd;
			&quot;columnName&quot;: &quot;#account_id&quot;,&#xd;
			&quot;columnType&quot;: &quot;varchar&quot;,&#xd;
			&quot;selectType&quot;: &quot;string&quot;,&#xd;
			&quot;tableType&quot;: &quot;1&quot;&#xd;
		}, {&#xd;
			&quot;columnDesc&quot;: &quot;&quot;,&#xd;
			&quot;columnName&quot;: &quot;user_level&quot;,&#xd;
			&quot;columnType&quot;: &quot;varchar&quot;,&#xd;
			&quot;selectType&quot;: &quot;string&quot;,&#xd;
			&quot;tableType&quot;: &quot;1&quot;&#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/rule/create?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-查询已创建虚拟属性id" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT v_prop_id FROM ta.ta_project_table_virtual_meta where open_id=&quot;${openId}&quot;
 and project_id=${projectId} and table_type=1 and column_name=&quot;${v_userProp_name}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">vProId_user</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式规则查询-用户属性" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/rule/query?projectId=${projectId}&amp;vProId=${vProId_user_1}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式规则删除-用户属性" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">https://ta_test.thinkingdata.cn/v1/ta/meta/prop/virtual/sql/rule/delete?projectId=${projectId}&amp;vProId=${vProId_user_1}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="维度字典删除-用户属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: ${uploadParam_user}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/dict/delete?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="维度字典上传-用户属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">level_id,level_name&#xd;
1,一级&#xd;
2,二级&#xd;
3,三级&#xd;
4,特级</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">v1/ta/meta/prop/virtual/dict/upload?projectId=${projectId}&amp;uploadParam=${__urlencode(${uploadParam_user})}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 入参处理" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;

//上接口返回：{&quot;data&quot;:{&quot;columns&quot;:[{&quot;needFill&quot;:false,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_id&quot;,&quot;selectType&quot;:&quot;string&quot;}},
//{&quot;needFill&quot;:true,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_name&quot;}}]},&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;success&quot;}
String resp=prev.getResponseDataAsString();
String columnDesc=&quot;等级名称&quot;;
String selectType=&quot;string&quot;;
//String columnDesc=vars.get(&quot;columnDesc&quot;);
//String selectType=vars.get(&quot;selectType&quot;);
String uploadParam=vars.get(&quot;uploadParam_user&quot;);
//返回的数据提取data中部分
JSONObject respObj=JSONObject.parseObject(resp);
JSONObject data=respObj.getJSONObject(&quot;data&quot;);
//对于新增的维度列添加 显示名，数据类型
JSONArray columns=data.getJSONArray(&quot;columns&quot;);
JSONObject property=columns.getJSONObject(1).getJSONObject(&quot;property&quot;);
property.put(&quot;columnDesc&quot;,columnDesc);
property.put(&quot;selectType&quot;,selectType);
//将两个json合并
JSONObject uploadParamObj=JSONObject.parseObject(uploadParam);
JSONObject createParamObj=new JSONObject();
createParamObj.putAll(data);
createParamObj.putAll(uploadParamObj);
//合并后json object转成string
String createParam=createParamObj.toJSONString();
vars.put(&quot;createParam_user&quot;,createParam);
log.info(resp);
log.info(uploadParam);
log.info(&quot;respObj:&quot;+respObj)

</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="维度字典校验和创建-用户属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">level_id,level_name&#xd;
1,一级&#xd;
2,二级&#xd;
3,三级&#xd;
4,特级</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/dict/create?createParam=${__urlencode(${createParam_user})}&amp;mainColumnId=${propId_user}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="虚拟属性-事件属性" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-查询虚拟属性" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT v_prop_id FROM ta.ta_project_table_virtual_meta where open_id=&quot;${openId}&quot;
 and project_id=${projectId} and table_type=0 and column_name=&quot;${v_eventProp_name}&quot;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">vProId_event</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否已存在虚拟事件属性名称" enabled="true">
              <stringProp name="IfController.condition">${vProId_event_#}&gt;0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式规则删除-事件属性" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://ta_test.thinkingdata.cn/v1/ta/meta/prop/virtual/sql/rule/delete?projectId=${projectId}&amp;vProId=${vProId_event_1}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                  <stringProp name="JSON_PATH">$.return_message</stringProp>
                  <stringProp name="EXPECTED_VALUE">success</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql字段参数校验-事件属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;vprop&quot;: {&#xd;
			&quot;columnDesc&quot;: &quot;${v_eventProp_desc}&quot;,&#xd;
			&quot;columnName&quot;: &quot;${v_eventProp_name}&quot;,&#xd;
			&quot;tableType&quot;: 0&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/verify/param?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="判断$.data.returnCode=0" enabled="true">
                <stringProp name="JSON_PATH">$.data.returnCode</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式初始校验，返回校验字段-事件属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;sqlExpression&quot;: &quot;date_diff(&apos;day&apos;,ta_u.\&quot;register_time\&quot;,\&quot;#event_time\&quot;)&quot;,&#xd;
		&quot;vprop&quot;: {&#xd;
			&quot;columnDesc&quot;: &quot;${v_eventProp_desc}&quot;,&#xd;
			&quot;columnName&quot;: &quot;${v_eventProp_name}&quot;,&#xd;
			&quot;selectType&quot;: &quot;number&quot;,&#xd;
			&quot;tableType&quot;: 0&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/verify/init?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="判断$.data.returnCode=0" enabled="true">
                <stringProp name="JSON_PATH">$.data.returnCode</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式计算校验，返回校验字段-事件属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;propertyValues&quot;: [{&#xd;
			&quot;value&quot;: &quot;2020-06-22 00:00&quot;,&#xd;
			&quot;property&quot;: {&#xd;
				&quot;columnDesc&quot;: &quot;事件时间&quot;,&#xd;
				&quot;columnName&quot;: &quot;#event_time&quot;,&#xd;
				&quot;columnType&quot;: &quot;timestamp&quot;,&#xd;
				&quot;selectType&quot;: &quot;datetime&quot;,&#xd;
				&quot;tableType&quot;: &quot;0&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;value&quot;: &quot;2020-06-02 00:00&quot;,&#xd;
			&quot;property&quot;: {&#xd;
				&quot;columnDesc&quot;: &quot;注册时间&quot;,&#xd;
				&quot;columnName&quot;: &quot;ta_u.\&quot;register_time\&quot;&quot;,&#xd;
				&quot;columnType&quot;: &quot;timestamp&quot;,&#xd;
				&quot;selectType&quot;: &quot;datetime&quot;,&#xd;
				&quot;tableType&quot;: &quot;1&quot;&#xd;
			}&#xd;
		}],&#xd;
		&quot;sqlExpression&quot;: &quot;date_diff(&apos;day&apos;,ta_u.\&quot;register_time\&quot;,\&quot;#event_time\&quot;)&quot;,&#xd;
		&quot;vprop&quot;: {&#xd;
			&quot;columnDesc&quot;: &quot;${v_eventProp_desc}&quot;,&#xd;
			&quot;columnName&quot;: &quot;${v_eventProp_name}&quot;,&#xd;
			&quot;selectType&quot;: &quot;number&quot;,&#xd;
			&quot;tableType&quot;: 0&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/verify/calc?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="判断$.data.returnCode=0" enabled="true">
                <stringProp name="JSON_PATH">$.data.returnCode</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="判断计算结果" enabled="true">
                <stringProp name="JSON_PATH">$.data.result</stringProp>
                <stringProp name="EXPECTED_VALUE">20</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式规则创建-事件属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;sqlExpression&quot;: &quot;date_diff(&apos;day&apos;,ta_u.\&quot;register_time\&quot;,\&quot;#event_time\&quot;)&quot;,&#xd;
		&quot;vprop&quot;: {&#xd;
			&quot;propId&quot;: null,&#xd;
			&quot;property&quot;: {&#xd;
				&quot;columnDesc&quot;: &quot;${v_eventProp_desc}&quot;,&#xd;
				&quot;columnName&quot;: &quot;${v_eventProp_name}&quot;,&#xd;
				&quot;selectType&quot;: &quot;number&quot;,&#xd;
				&quot;tableType&quot;: 0&#xd;
			}&#xd;
		},&#xd;
		&quot;properties&quot;: [{&#xd;
			&quot;columnDesc&quot;: &quot;事件时间&quot;,&#xd;
			&quot;columnName&quot;: &quot;#event_time&quot;,&#xd;
			&quot;columnType&quot;: &quot;timestamp&quot;,&#xd;
			&quot;selectType&quot;: &quot;datetime&quot;,&#xd;
			&quot;tableType&quot;: &quot;0&quot;&#xd;
		}, {&#xd;
			&quot;columnDesc&quot;: &quot;注册时间&quot;,&#xd;
			&quot;columnName&quot;: &quot;ta_u.\&quot;register_time\&quot;&quot;,&#xd;
			&quot;columnType&quot;: &quot;timestamp&quot;,&#xd;
			&quot;selectType&quot;: &quot;datetime&quot;,&#xd;
			&quot;tableType&quot;: &quot;1&quot;&#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/rule/create?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-查询已创建虚拟属性id" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT v_prop_id FROM ta.ta_project_table_virtual_meta where open_id=&quot;${openId}&quot;
 and project_id=${projectId} and table_type=0 and column_name=&quot;${v_eventProp_name}&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">vProId_event</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式规则查询-事件属性" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/sql/rule/query?projectId=${projectId}&amp;vProId=${vProId_event_1}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sql表达式规则删除-事件属性" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">https://ta_test.thinkingdata.cn/v1/ta/meta/prop/virtual/sql/rule/delete?projectId=${projectId}&amp;vProId=${vProId_event_1}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="维度字典删除-事件属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: ${uploadParam_event}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/dict/delete?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="维度字典上传-事件属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">channel_id,channel_name&#xd;
1,app store&#xd;
2,华为应用市场&#xd;
3,应用宝&#xd;
4,小米应用市场</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">v1/ta/meta/prop/virtual/dict/upload?projectId=${projectId}&amp;uploadParam=${__urlencode(${uploadParam_event})}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="维度字典校验和创建-事件属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">channel_id,channel_name&#xd;
1,app store&#xd;
2,华为应用市场&#xd;
3,应用宝&#xd;
4,小米应用市场</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/prop/virtual/dict/create?createParam=${__urlencode(${createParam_event})}&amp;mainColumnId=${propId_event}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;

//上接口返回：{&quot;data&quot;:{&quot;columns&quot;:[{&quot;needFill&quot;:false,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_id&quot;,&quot;selectType&quot;:&quot;string&quot;}},{&quot;needFill&quot;:true,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_name&quot;}}]},&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;success&quot;}
String resp=prev.getResponseDataAsString();
String columnDesc=&quot;渠道名称&quot;;
String selectType=&quot;string&quot;;
//String columnDesc=vars.get(&quot;columnDesc&quot;);
//String selectType=vars.get(&quot;selectType&quot;);
String uploadParam=vars.get(&quot;uploadParam_event&quot;);
//返回的数据提取data中部分
JSONObject respObj=JSONObject.parseObject(resp);
JSONObject data=respObj.getJSONObject(&quot;data&quot;);
//对于新增的维度列添加 显示名，数据类型
JSONArray columns=data.getJSONArray(&quot;columns&quot;);
JSONObject property=columns.getJSONObject(1).getJSONObject(&quot;property&quot;);
property.put(&quot;columnDesc&quot;,columnDesc);
property.put(&quot;selectType&quot;,selectType);
//将两个json合并
JSONObject uploadParamObj=JSONObject.parseObject(uploadParam);
JSONObject createParamObj=new JSONObject();
createParamObj.putAll(data);
createParamObj.putAll(uploadParamObj);
//合并后json object转成string
String createParam=createParamObj.toJSONString();
vars.put(&quot;createParam_event&quot;,createParam);
log.info(resp);
log.info(uploadParam);
log.info(&quot;respObj:&quot;+respObj)

</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="虚拟事件" enabled="true"/>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1250419644">v_eventName</stringProp>
              <stringProp name="31430900">eventType</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="2058553065">
                <stringProp name="-190589581">ta@v_event_test</stringProp>
                <stringProp name="167912849">v_event</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-查询虚拟属性" enabled="true">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select v_event_id from ta.ta_v_event_info where project_id=${projectId} and 
open_id =&quot;${openId}&quot; and event_name=&quot;${v_eventName}&quot; and is_hide=0;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">v_event_id</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否已存在虚拟事件名" enabled="true">
            <stringProp name="IfController.condition">${v_event_id_#}&gt;0</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除虚拟事件" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/meta/event/virtual/deleteVEvent?projectId=${projectId}&amp;vEventId=${v_event_id_1}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建虚拟事件" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;eventName&quot;: &quot;${v_eventName}&quot;,&#xd;
		&quot;eventDesc&quot;: &quot;虚拟事件名&quot;,&#xd;
		&quot;remark&quot;: &quot;232323&quot;,&#xd;
		&quot;eventType&quot;: &quot;event_v&quot;,&#xd;
		&quot;rule&quot;: {&#xd;
			&quot;events&quot;: [{&#xd;
				&quot;eventDesc&quot;: &quot;事件1&quot;,&#xd;
				&quot;eventName&quot;: &quot;event_1&quot;,&#xd;
				&quot;eventType&quot;: &quot;event&quot;,&#xd;
				&quot;filter&quot;: {&#xd;
					&quot;junctionKind&quot;: &quot;and&quot;,&#xd;
					&quot;taFilters&quot;: []&#xd;
				}&#xd;
			}, {&#xd;
				&quot;eventDesc&quot;: &quot;event_2&quot;,&#xd;
				&quot;eventName&quot;: &quot;event_2&quot;,&#xd;
				&quot;eventType&quot;: &quot;event&quot;,&#xd;
				&quot;filter&quot;: {&#xd;
					&quot;junctionKind&quot;: &quot;and&quot;,&#xd;
					&quot;taFilters&quot;: []&#xd;
				}&#xd;
			}],&#xd;
			&quot;filter&quot;: {&#xd;
				&quot;junctionKind&quot;: &quot;and&quot;,&#xd;
				&quot;taFilters&quot;: []&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/meta/event/virtual/createVEvent?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-查询已创建虚拟属性id" enabled="true">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select v_event_id from ta.ta_v_event_info where project_id=${projectId} and 
open_id =&quot;${openId}&quot; and event_name=&quot;${v_eventName}&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">v_event_id</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询虚拟事件" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/meta/event/virtual/queryVEvent?projectId=${projectId}&amp;vEventId=${v_event_id_1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改虚拟事件" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;eventDesc&quot;: &quot;虚拟事件名&quot;,&#xd;
		&quot;eventId&quot;: ${v_event_id_1},&#xd;
		&quot;eventName&quot;: &quot;ta@v_event_test&quot;,&#xd;
		&quot;isHide&quot;: false,&#xd;
		&quot;remark&quot;: &quot;232323&quot;,&#xd;
		&quot;rule&quot;: {&#xd;
			&quot;events&quot;: [{&#xd;
				&quot;eventDesc&quot;: &quot;事件1&quot;,&#xd;
				&quot;eventName&quot;: &quot;event_1&quot;,&#xd;
				&quot;eventType&quot;: &quot;event&quot;,&#xd;
				&quot;filter&quot;: {&#xd;
					&quot;junctionKind&quot;: &quot;and&quot;,&#xd;
					&quot;taFilters&quot;: []&#xd;
				}&#xd;
			}, {&#xd;
				&quot;eventDesc&quot;: &quot;event_4&quot;,&#xd;
				&quot;eventName&quot;: &quot;event_4&quot;,&#xd;
				&quot;eventType&quot;: &quot;event&quot;,&#xd;
				&quot;filter&quot;: {&#xd;
					&quot;junctionKind&quot;: &quot;and&quot;,&#xd;
					&quot;taFilters&quot;: []&#xd;
				}&#xd;
			}],&#xd;
			&quot;filter&quot;: {&#xd;
				&quot;junctionKind&quot;: &quot;and&quot;,&#xd;
				&quot;taFilters&quot;: []&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/meta/event/virtual/createVEvent?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除虚拟事件" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/meta/event/virtual/deleteVEvent?projectId=${projectId}&amp;vEventId=${v_event_id_1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="用户行为序列" enabled="true"/>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1921669528">ta_user_userId</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="56012935">
                <stringProp name="1601">23</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC 获取项目所有元事件" enabled="true">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT event_name from ta.ta_event_info where project_id=${projectId} and is_hide=0;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">meta_event_names</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 将查询结果转换成数组" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
int max=Integer.parseInt(vars.get(&quot;meta_event_names_#&quot;));
meta_event_name=vars.get(&quot;meta_event_names_1&quot;);
log.info(meta_event_name+max);
JSONArray jsonArray = new JSONArray();
for(int i=0; i&lt;max;i++){
	String name=&quot;meta_event_names_&quot;+(i+1);
	String eventName=vars.get(name);
	jsonArray.add(eventName);
	log.info(eventName);
}
vars.put(&quot;event_names&quot;,jsonArray.toJSONString());
/*int max =Integer.parseInt(vars.get(&quot;meta_event_names_#&quot;));
String[] meta_event_names=new String[max];
for(int i=0; i&lt;max;i++){
	meta_event_names[i]=vars.get(&quot;meta_event_names_${i}&quot;);
	log.info(meta_event_names);
}*/</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="load元事件" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/event/loadevent?_t=1593415791816&amp;projectId=23</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">eventNames</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].eventName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                </elementProp>
                <elementProp name="eventModel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">eventModel</stringProp>
                </elementProp>
                <elementProp name="qp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;analysis&quot;:&quot;A101&quot;,&quot;analysisDesc&quot;:&quot;用户数&quot;,&quot;eventNameDisplay&quot;:&quot;&quot;,&quot;filts&quot;:[],&quot;quota&quot;:&quot;&quot;,&quot;quotaDesc&quot;:&quot;&quot;,&quot;relation&quot;:1,&quot;tableType&quot;:&quot;1&quot;}],&quot;eventView&quot;:{&quot;projectId&quot;:${projectId},&quot;graphShape&quot;:&quot;L1&quot;,&quot;groupBy&quot;:[],&quot;userCrowds&quot;:[]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">qp</stringProp>
                </elementProp>
                <elementProp name="sliceGroupVal" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;总体&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sliceGroupVal</stringProp>
                </elementProp>
                <elementProp name="eventIndex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">eventIndex</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/seq/event/seqEventList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户详细列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;useCache&quot;: false,&#xd;
		&quot;userIds&quot;: [&quot;${ta_user_userId}&quot;]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/seq/event/usersDetails?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户行为序列分布" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;dateFormat&quot;: &quot;T1&quot;,&#xd;
		&quot;eventNames&quot;: ${event_names},&#xd;
		&quot;eventTimeOrdinal&quot;: &quot;order_desc&quot;,&#xd;
		&quot;startDateTime&quot;: &quot;2020-05-30 00:00:00&quot;,&#xd;
		&quot;endDateTime&quot;: &quot;2020-06-28 00:00:00&quot;,&#xd;
		&quot;userId&quot;: &quot;${ta_user_userId}&quot;,&#xd;
		&quot;useCache&quot;: true,&#xd;
		&quot;firstDayOfWeek&quot;: 1&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/seq/event/userEventActSeqDistri?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames"></stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.L1.y[0].事件总量.总体[3]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 提取startDateTime数字" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;

String resp=prev.getResponseDataAsString();
JSONObject respObj=JSONObject.parseObject(resp);
log.info(resp);
//$.data.L1.y[0].事件总量.总体
JSONArray total=respObj.getJSONObject(&quot;data&quot;).getJSONObject(&quot;L1&quot;).getJSONArray(&quot;y&quot;).getJSONObject(0).getJSONObject(&quot;事件总量&quot;).getJSONArray(&quot;总体&quot;);
JSONArray x_list=respObj.getJSONObject(&quot;data&quot;).getJSONObject(&quot;L1&quot;).getJSONArray(&quot;x&quot;);
JSONArray datetimes=new JSONArray();
log.info(total.toJSONString());
log.info(x_list.toJSONString());
int len=total.size();
for(int i=0;i&lt;len;i++)
{
	int val=total.getIntValue(i);
	if(val&gt;0)
	{
		log.info(&quot;ss:&quot;+val);
		log.info(x_list.get(i));
		datetimes.add(x_list.get(i));
//		log.info(datetimes.toJSONString());
	}
//	if(val&lt;=0)
//	{
//		datetimes.remove(i);
//	}
}
vars.put(&quot;dateTimes&quot;,datetimes.toJSONString());</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户行为序列详细列表-page=1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 1,&#xd;
			&quot;pageSize&quot;: 2&#xd;
		},&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;dateFormat&quot;: &quot;T1&quot;,&#xd;
		&quot;userId&quot;: &quot;${ta_user_userId}&quot;,&#xd;
		&quot;eventNames&quot;: ${event_names},&#xd;
		&quot;eventTimeOrdinal&quot;: &quot;order_desc&quot;,&#xd;
		&quot;firstDayOfWeek&quot;: 1,&#xd;
		&quot;startDateTime&quot;: ${dateTimes},&#xd;
		&quot;useCache&quot;: true&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/seq/event/userEventSeqDetailList?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户行为序列详细列表-page=2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 2,&#xd;
			&quot;pageSize&quot;: 30&#xd;
		},&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;dateFormat&quot;: &quot;T1&quot;,&#xd;
		&quot;userId&quot;: &quot;${ta_user_userId}&quot;,&#xd;
		&quot;eventNames&quot;: ${event_names},&#xd;
		&quot;eventTimeOrdinal&quot;: &quot;order_desc&quot;,&#xd;
		&quot;firstDayOfWeek&quot;: 1,&#xd;
		&quot;startDateTime&quot;: ${dateTimes},&#xd;
		&quot;useCache&quot;: true&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/seq/event/userEventSeqDetailList?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="用户分群" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="USER_CLUSTER_IMPORT_LIMIT" elementType="Argument">
                <stringProp name="Argument.name">USER_CLUSTER_IMPORT_LIMIT</stringProp>
                <stringProp name="Argument.value">50</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="USER_CLUSTER_CON_LIMIT" elementType="Argument">
                <stringProp name="Argument.name">USER_CLUSTER_CON_LIMIT</stringProp>
                <stringProp name="Argument.value">200</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="USER_CLUSTER_RESULT_LIMIT" elementType="Argument">
                <stringProp name="Argument.name">USER_CLUSTER_RESULT_LIMIT</stringProp>
                <stringProp name="Argument.value">50</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分群列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterTypes&quot;: [&quot;cluster_by_dynamic_condition&quot;, &quot;cluster_by_static_condition&quot;, &quot;cluster_by_result&quot;, &quot;cluster_by_import&quot;],&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 1,&#xd;
			&quot;pageSize&quot;: 10000&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/query?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言分群条数正确" enabled="true">
              <stringProp name="JSON_PATH">$.data.pagerResult.totalNum</stringProp>
              <stringProp name="EXPECTED_VALUE">${cluster_ids_#}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="JDBC 查询所有分群id" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select id from ta.ta_user_cluster where  project_id=${projectId} and cluster_catalog=0 and status=1 ; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">cluster_ids</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言-判断返回的分群id数组正确" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;


int count=Integer.parseInt(vars.get(&quot;cluster_ids_#&quot;));
int[] clusters = new int[count];
for (int i=1;i&lt;=count;i++){
	log.info(vars.get(&quot;cluster_ids_&quot;+i));
	clusters[i-1]=Integer.parseInt(vars.get(&quot;cluster_ids_&quot;+i));
//	clusters.add(Integer.parseInt(vars.get(&quot;cluster_ids_&quot;+i)));
	}
Arrays.sort(clusters);
//Collections.sort(cluster_ids);
log.info(&quot;a&quot;+clusters);
JSONObject response=JSONObject.parseObject(prev.getResponseDataAsString());
JSONArray userClusters=response.getJSONObject(&quot;data&quot;).getJSONArray(&quot;userClusters&quot;);
int size=userClusters.size();
int[] resp_clusters=new int[size];
for(int i=0;i&lt;size;i++){
	int id=userClusters.getJSONObject(i).getInteger(&quot;id&quot;);
	resp_clusters[i]=id;
	}

Arrays.sort(resp_clusters);
log.info(&quot;s&quot;+resp_clusters);

if(!Arrays.equals(clusters,resp_clusters)){
	Failure=true;
	}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="条件分群" enabled="true"/>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </Arguments>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分群列表-条件分群" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterTypes&quot;: [&quot;cluster_by_dynamic_condition&quot;, &quot;cluster_by_static_condition&quot;],&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 1,&#xd;
			&quot;pageSize&quot;: 10000&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/query?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="条件分群-查询是否达到上限" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/con/countLimitCheck?_t=1593501131122&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="returnCode=0" enabled="true">
                <stringProp name="JSON_PATH">$.data.returnCode</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言limit" enabled="true">
                <stringProp name="JSON_PATH">$.data.limit</stringProp>
                <stringProp name="EXPECTED_VALUE">${USER_CLUSTER_CON_LIMIT}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分群状态查询类型-条件分群" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/stat?clusterType=cluster_by_static_condition&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言userResultClusterLimit" enabled="true">
                <stringProp name="JSON_PATH">$.data.userResultClusterLimit</stringProp>
                <stringProp name="EXPECTED_VALUE">${USER_CLUSTER_CON_LIMIT}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取默认群名&amp;群显示名" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">nextDefaultClusterName;nextDefaultDisplayName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.nextDefaultClusterName;$.data.nextDefaultDisplayName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;;&quot;&quot;</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="条件分群-添加" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterName&quot;: &quot;${nextDefaultClusterName}&quot;,&#xd;
		&quot;displayName&quot;: &quot;${nextDefaultDisplayName}&quot;,&#xd;
		&quot;qp&quot;: &quot;{\&quot;userClusterDef\&quot;:{\&quot;event_relation\&quot;:\&quot;1\&quot;,\&quot;event_user_relation\&quot;:\&quot;1\&quot;,\&quot;events\&quot;:[{\&quot;eventName\&quot;:\&quot;anyEvent\&quot;,\&quot;eventType\&quot;:\&quot;event\&quot;,\&quot;taPropQuota\&quot;:{\&quot;analysis\&quot;:\&quot;A200\&quot;,\&quot;analysisDesc\&quot;:\&quot;总次数\&quot;,\&quot;quota\&quot;:\&quot;\&quot;,\&quot;quotaDesc\&quot;:\&quot;\&quot;},\&quot;uceCalcuSymbol\&quot;:\&quot;C03\&quot;,\&quot;num\&quot;:\&quot;0\&quot;,\&quot;recentDay\&quot;:\&quot;\&quot;,\&quot;startTime\&quot;:\&quot;2020-06-01 00:00:00\&quot;,\&quot;endTime\&quot;:\&quot;2020-06-30 23:59:59\&quot;,\&quot;relation\&quot;:1,\&quot;filts\&quot;:[],\&quot;eventDesc\&quot;:\&quot;任意事件\&quot;}],\&quot;filts\&quot;:[],\&quot;relation\&quot;:\&quot;1\&quot;}}&quot;,&#xd;
		&quot;clusterType&quot;: &quot;cluster_by_static_condition&quot;,&#xd;
		&quot;remarks&quot;: &quot;备注sss&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/con/add?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取clusterId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">clusterId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取分群详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/query?_t=1593501859132&amp;clusterId=${clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言clusterId匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${clusterId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言clusterType匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.clusterType</stringProp>
                <stringProp name="EXPECTED_VALUE">cluster_by_static_condition</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言clusterName匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.clusterName</stringProp>
                <stringProp name="EXPECTED_VALUE">${nextDefaultClusterName}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言projectId匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.projectId</stringProp>
                <stringProp name="EXPECTED_VALUE">${projectId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言userId匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.userId</stringProp>
                <stringProp name="EXPECTED_VALUE">${userId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言usersNum匹配" enabled="false">
                <stringProp name="JSON_PATH">$.data.usersNum</stringProp>
                <stringProp name="EXPECTED_VALUE">14</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="跳转分群用户列表（未分页）" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/users?_t=1593507657731&amp;clusterId=${clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言存在userList" enabled="true">
                <stringProp name="JSON_PATH">$.data.userList</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言存在propMeta" enabled="true">
                <stringProp name="JSON_PATH">$.data.propMeta</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言分群结果count" enabled="true">
                <stringProp name="JSON_PATH">$.data.count</stringProp>
                <stringProp name="EXPECTED_VALUE">14</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待3s" enabled="true">
                <stringProp name="TestPlan.comments">定时器在当前取样之前执行</stringProp>
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="条件分群修改" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;id&quot;: ${clusterId},&#xd;
&#xd;
		&quot;displayName&quot;: &quot;分群_${__time(YMMddHHmmSS,)}&quot;,&#xd;
		&quot;remarks&quot;: &quot;&quot;,&#xd;
		&quot;qp&quot;: &quot;{\&quot;userClusterDef\&quot;:{\&quot;event_relation\&quot;:\&quot;1\&quot;,\&quot;event_user_relation\&quot;:\&quot;1\&quot;,\&quot;events\&quot;:[{\&quot;eventName\&quot;:\&quot;anyEvent\&quot;,\&quot;eventType\&quot;:\&quot;event\&quot;,\&quot;taPropQuota\&quot;:{\&quot;analysis\&quot;:\&quot;A200\&quot;,\&quot;analysisDesc\&quot;:\&quot;总次数\&quot;,\&quot;quota\&quot;:\&quot;\&quot;,\&quot;quotaDesc\&quot;:\&quot;\&quot;},\&quot;uceCalcuSymbol\&quot;:\&quot;C03\&quot;,\&quot;num\&quot;:\&quot;5\&quot;,\&quot;recentDay\&quot;:\&quot;1-30\&quot;,\&quot;startTime\&quot;:\&quot;2020-05-31 15:15:08\&quot;,\&quot;endTime\&quot;:\&quot;2020-06-29 15:15:08\&quot;,\&quot;relation\&quot;:1,\&quot;filts\&quot;:[],\&quot;eventDesc\&quot;:\&quot;任意事件\&quot;}],\&quot;filts\&quot;:[{\&quot;calcuSymbol\&quot;:\&quot;C04\&quot;,\&quot;calcuSymbolDesc\&quot;:\&quot;\&quot;,\&quot;columnDesc\&quot;:\&quot;账户ID\&quot;,\&quot;columnIndex\&quot;:-1,\&quot;columnName\&quot;:\&quot;#account_id\&quot;,\&quot;columnType\&quot;:\&quot;varchar\&quot;,\&quot;ftv\&quot;:[],\&quot;tableType\&quot;:\&quot;1\&quot;,\&quot;selectType\&quot;:\&quot;string\&quot;,\&quot;timeRelative\&quot;:\&quot;\&quot;,\&quot;timeUnit\&quot;:\&quot;\&quot;}],\&quot;relation\&quot;:\&quot;1\&quot;}}&quot;,&#xd;
		&quot;clusterType&quot;: &quot;cluster_by_dynamic_condition&quot;,&#xd;
		&quot;refresh_time&quot;: &quot;2020-06-30 15:15:38&quot;,&#xd;
		&quot;user_id&quot;: ${userId},&#xd;
		&quot;mainColumnName&quot;: &quot;&quot;,&#xd;
		&quot;uploadFileName&quot;: &quot;&quot;,&#xd;
		&quot;refreshDelay&quot;: &quot;2&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/con/modify?clusterId=${clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 后置处理程序" enabled="false">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="query">select id,display_name,refresh_type,def from ta.ta_user_cluster where id=${clusterId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">display_name,refresh_type,def</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="刷新分群" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/refresh?clusterId=${clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待1s" enabled="true">
                <stringProp name="TestPlan.comments">定时器在当前取样之前执行</stringProp>
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取条件分群进度" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/progress?_t=1593508611344&amp;clusterId=${clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待3s" enabled="true">
                <stringProp name="TestPlan.comments">定时器在当前取样之前执行</stringProp>
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言刷新分群进度" enabled="true">
                <stringProp name="JSON_PATH">$.data</stringProp>
                <stringProp name="EXPECTED_VALUE">100</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="条件分群-删除分群" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/con/delete?id=${clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取分群详情-上一步校验删除成功" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/query?_t=1593501859132&amp;clusterId=${clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=用户分群或标签不存在" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">用户分群或标签不存在</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ID分群" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分群列表-ID分群" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterTypes&quot;: [&quot;cluster_by_import&quot;],&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 1,&#xd;
			&quot;pageSize&quot;: 10000&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/query?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ID分群-查询是否达到上限" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/count/import-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言userResultClusterLimit" enabled="true">
                <stringProp name="JSON_PATH">$.data.userResultClusterLimit</stringProp>
                <stringProp name="EXPECTED_VALUE">${USER_CLUSTER_IMPORT_LIMIT}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分群状态查询类型-ID分群" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/stat?clusterType=cluster_by_import&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取默认群名&amp;群显示名" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">nextDefaultClusterName;nextDefaultDisplayName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.nextDefaultClusterName;$.data.nextDefaultDisplayName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;;&quot;&quot;</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言userResultClusterLimit" enabled="true">
                <stringProp name="JSON_PATH">$.data.userResultClusterLimit</stringProp>
                <stringProp name="EXPECTED_VALUE">${USER_CLUSTER_IMPORT_LIMIT}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ID分群-添加" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${account_id_1}&#xd;
${account_id_2}&#xd;
${account_id_3}&#xd;
${account_id_4}&#xd;
${account_id_5}&#xd;
1234&#xd;
11111111111111&#xd;
22222222222222</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/import-id/add?displayName=${nextDefaultDisplayName}&amp;clusterName=${nextDefaultClusterName}&amp;mainColumnName=%23account_id&amp;projectId=${projectId}&amp;remarks=ff</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="前置JDBC 查询任意10个account_id" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select account_id from ta.ta_user_${projectId} order by RAND() LIMIT 10;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">account_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPreProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言共上传8条" enabled="true">
                <stringProp name="JSON_PATH">$.data.uploadNum</stringProp>
                <stringProp name="EXPECTED_VALUE">8</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言成功5条" enabled="true">
                <stringProp name="JSON_PATH">$.data.successNum</stringProp>
                <stringProp name="EXPECTED_VALUE">5</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取导入结果import_clusterId;mport_userNum" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">import_clusterId;import_userNum</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.clusterId;$.data.userNum</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言userNum5条" enabled="true">
                <stringProp name="JSON_PATH">$.data.userNum</stringProp>
                <stringProp name="EXPECTED_VALUE">5</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="跳转分群用户列表（未分页）" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/users?_t=1593507657731&amp;clusterId=${import_clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言存在userList" enabled="true">
                <stringProp name="JSON_PATH">$.data.userList</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言存在propMeta" enabled="true">
                <stringProp name="JSON_PATH">$.data.propMeta</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言分群结果count" enabled="true">
                <stringProp name="JSON_PATH">$.data.count</stringProp>
                <stringProp name="EXPECTED_VALUE">${import_userNum}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待3s" enabled="true">
                <stringProp name="TestPlan.comments">定时器在当前取样之前执行</stringProp>
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取分群详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/query?_t=1593501859132&amp;clusterId=${import_clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言clusterId匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${import_clusterId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言clusterType匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.clusterType</stringProp>
                <stringProp name="EXPECTED_VALUE">cluster_by_import</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言clusterName匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.clusterName</stringProp>
                <stringProp name="EXPECTED_VALUE">${nextDefaultClusterName}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
                <stringProp name="TestPlan.comments">ID分群的分群名没有传</stringProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言projectId匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.projectId</stringProp>
                <stringProp name="EXPECTED_VALUE">${projectId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言userId匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.userId</stringProp>
                <stringProp name="EXPECTED_VALUE">${userId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言usersNum匹配" enabled="false">
                <stringProp name="JSON_PATH">$.data.usersNum</stringProp>
                <stringProp name="EXPECTED_VALUE">14</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="下载分群用户列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${import_clusterId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                  </elementProp>
                  <elementProp name="columnSplitedStr" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">columnSplitedStr</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/downloadCluster</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言分群用户列表正确" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="142224391">${account_id_1}</stringProp>
                  <stringProp name="142224422">${account_id_2}</stringProp>
                  <stringProp name="142224453">${account_id_3}</stringProp>
                  <stringProp name="142224484">${account_id_4}</stringProp>
                  <stringProp name="142224515">${account_id_5}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*\/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ID分群-ID文件下载" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="clusterId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${import_clusterId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">clusterId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/import-id/download-id-file</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*\/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言分群用户列表正确" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="142224391">${account_id_1}</stringProp>
                  <stringProp name="142224422">${account_id_2}</stringProp>
                  <stringProp name="142224453">${account_id_3}</stringProp>
                  <stringProp name="142224484">${account_id_4}</stringProp>
                  <stringProp name="142224515">${account_id_5}</stringProp>
                  <stringProp name="1509442">1234</stringProp>
                  <stringProp name="1460175584">11111111111111</stringProp>
                  <stringProp name="-350725184">22222222222222</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ID分群-修改" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${account_id_1}&#xd;
${account_id_2}&#xd;
${account_id_3}&#xd;
${account_id_4}&#xd;
${account_id_5}&#xd;
${account_id_6}&#xd;
${account_id_7}&#xd;
${account_id_8}&#xd;
11111111111111&#xd;
22222222222222</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">https://ta_test.thinkingdata.cn/v1/ta/user/cluster/import-id/modify?clusterId=${import_clusterId}&amp;displayName=${__urlencode(分群_${timeTag})}&amp;mainColumnName=%23account_id&amp;projectId=${projectId}&amp;remarks=ff</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言共上传10条" enabled="true">
                <stringProp name="JSON_PATH">$.data.uploadNum</stringProp>
                <stringProp name="EXPECTED_VALUE">10</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言成功8条" enabled="true">
                <stringProp name="JSON_PATH">$.data.successNum</stringProp>
                <stringProp name="EXPECTED_VALUE">8</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ID分群-删除" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/con/delete?id=${import_clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取分群详情-上一步校验删除成功" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/query?_t=1593501859132&amp;clusterId=${import_clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=用户分群或标签不存在" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">用户分群或标签不存在</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="结果分群" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分群列表-结果分群" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterTypes&quot;: [&quot;cluster_by_result&quot;],&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 1,&#xd;
			&quot;pageSize&quot;: 10000&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/query?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="结果分群-查询是否达到上限" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/count/result</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言userResultClusterLimit" enabled="true">
                <stringProp name="JSON_PATH">$.data.userResultClusterLimit</stringProp>
                <stringProp name="EXPECTED_VALUE">${USER_CLUSTER_RESULT_LIMIT}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取默认群显示名nextDefaultName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">nextDefaultName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.nextDefaultName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WebSocket Open Connection" enabled="false">
              <boolProp name="TLS">true</boolProp>
              <stringProp name="server">${Host}</stringProp>
              <stringProp name="port">443</stringProp>
              <stringProp name="path">/websocket/query</stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="readTimeout">6000</stringProp>
            </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
            <hashTree/>
            <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WebSocket 结果分群-添加" enabled="true">
              <boolProp name="createNewConnection">true</boolProp>
              <boolProp name="TLS">true</boolProp>
              <stringProp name="server">${Host}</stringProp>
              <stringProp name="port">443</stringProp>
              <stringProp name="path">/websocket/query</stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <boolProp name="binaryPayload">false</boolProp>
              <stringProp name="requestData">[&quot;data&quot;,{&quot;requestId&quot;:&quot;CLUSTER_ADD@@${timeTag}&quot;,&quot;projectId&quot;:${projectId},&quot;sourceData&quot;:{&quot;data&quot;:{&quot;commonHeader&quot;:{&quot;projectId&quot;:${projectId}},&quot;displayName&quot;:&quot;${nextDefaultName}&quot;,&quot;modelUserSearchRequest&quot;:{&quot;eventModel&quot;:0,&quot;sliceGroupVal&quot;:&quot;[]&quot;,&quot;sliceDate&quot;:&quot;2020-06-13&quot;,&quot;eventIndex&quot;:0,&quot;eventDate&quot;:&quot;2020-06-13(六)&quot;},&quot;qp&quot;:&quot;{\&quot;events\&quot;:[{\&quot;analysis\&quot;:\&quot;A101\&quot;,\&quot;analysisDesc\&quot;:\&quot;触发用户数\&quot;,\&quot;customEvent\&quot;:\&quot;\&quot;,\&quot;customFilters\&quot;:[],\&quot;eventName\&quot;:\&quot;player_register\&quot;,\&quot;eventDesc\&quot;:\&quot;player_register\&quot;,\&quot;eventType\&quot;:\&quot;event\&quot;,\&quot;eventNameDisplay\&quot;:\&quot;\&quot;,\&quot;eventSplitIndexes\&quot;:null,\&quot;filts\&quot;:[],\&quot;quota\&quot;:\&quot;\&quot;,\&quot;quotaDesc\&quot;:\&quot;\&quot;,\&quot;subTableType\&quot;:\&quot;\&quot;,\&quot;relation\&quot;:1,\&quot;type\&quot;:0}],\&quot;eventView\&quot;:{\&quot;groupBy\&quot;:[],\&quot;projectId\&quot;:23,\&quot;timeParticleSize\&quot;:\&quot;T1\&quot;,\&quot;filts\&quot;:[],\&quot;relation\&quot;:1,\&quot;eventSplit\&quot;:null,\&quot;recentDay\&quot;:\&quot;1-30\&quot;,\&quot;startTime\&quot;:\&quot;2020-06-02 00:00:00\&quot;,\&quot;endTime\&quot;:\&quot;2020-07-01 00:00:00\&quot;,\&quot;comparedByTime\&quot;:false,\&quot;comparedRecentDay\&quot;:\&quot;\&quot;,\&quot;comparedStartTime\&quot;:\&quot;\&quot;,\&quot;comparedEndTime\&quot;:\&quot;\&quot;},\&quot;reportId\&quot;:\&quot;\&quot;,\&quot;isLost\&quot;:false}&quot;,&quot;clusterType&quot;:&quot;cluster_by_result&quot;,&quot;remarks&quot;:&quot;&quot;,&quot;clusterCatalog&quot;:&quot;catalog_cluster&quot;,&quot;zoneOffset&quot;:null}},&quot;querySource&quot;:&quot;clusterAdd&quot;,&quot;zoneOffset&quot;:null}]</stringProp>
              <stringProp name="readTimeout">6000</stringProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取result_clusterId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">result_clusterId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.[1].result.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言status" enabled="false">
                <stringProp name="JSON_PATH">$.[1].status</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.[1].result.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1789324281">&quot;status&quot;:&quot;running&quot;</stringProp>
                  <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">48</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="WebSocket Single Read Sampler" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="dataType">Text</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <stringProp name="readTimeout">6000</stringProp>
              <boolProp name="optional">true</boolProp>
            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="跳转分群用户列表（未分页）" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/users?_t=1593507657731&amp;clusterId=${result_clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言存在userList" enabled="true">
                <stringProp name="JSON_PATH">$.data.userList</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言存在propMeta" enabled="true">
                <stringProp name="JSON_PATH">$.data.propMeta</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言分群结果count" enabled="true">
                <stringProp name="JSON_PATH">$.data.count</stringProp>
                <stringProp name="EXPECTED_VALUE">2</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待3s" enabled="true">
                <stringProp name="TestPlan.comments">定时器在当前取样之前执行</stringProp>
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取分群详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/query?_t=1593501859132&amp;clusterId=${result_clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言clusterId匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${result_clusterId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言clusterType匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.clusterType</stringProp>
                <stringProp name="EXPECTED_VALUE">cluster_by_result</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言projectId匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.projectId</stringProp>
                <stringProp name="EXPECTED_VALUE">${projectId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言userId匹配" enabled="true">
                <stringProp name="JSON_PATH">$.data.userId</stringProp>
                <stringProp name="EXPECTED_VALUE">${userId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言usersNum匹配" enabled="false">
                <stringProp name="JSON_PATH">$.data.usersNum</stringProp>
                <stringProp name="EXPECTED_VALUE">14</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="结果分群-修改（名称、备注）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;displayName&quot;: &quot;分群_20200702_000&quot;,&#xd;
		&quot;remarks&quot;: &quot;备注1233&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/res/modify?clusterId=${result_clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="结果分群-删除" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">https://ta_test.thinkingdata.cn/v1/ta/user/cluster/res/delete?id=${result_clusterId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="结果分群批量删除" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;batchDeleteType&quot;: &quot;delete_old_ten&quot;&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/res/batch/delete?projectId=23</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="条件分群条数上限" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分群列表-条件分群" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterTypes&quot;: [&quot;cluster_by_dynamic_condition&quot;, &quot;cluster_by_static_condition&quot;],&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 1,&#xd;
			&quot;pageSize&quot;: 10000&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/query?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器clusterId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">clusterId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userClusters[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="条件分群-添加" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterName&quot;: &quot;cohort_${timeTag}&quot;,&#xd;
		&quot;displayName&quot;: &quot;条件分群_${timeTag}&quot;,&#xd;
		&quot;qp&quot;: &quot;{\&quot;userClusterDef\&quot;:{\&quot;event_relation\&quot;:\&quot;1\&quot;,\&quot;event_user_relation\&quot;:\&quot;1\&quot;,\&quot;events\&quot;:[{\&quot;eventName\&quot;:\&quot;anyEvent\&quot;,\&quot;eventType\&quot;:\&quot;event\&quot;,\&quot;taPropQuota\&quot;:{\&quot;analysis\&quot;:\&quot;A200\&quot;,\&quot;analysisDesc\&quot;:\&quot;总次数\&quot;,\&quot;quota\&quot;:\&quot;\&quot;,\&quot;quotaDesc\&quot;:\&quot;\&quot;},\&quot;uceCalcuSymbol\&quot;:\&quot;C03\&quot;,\&quot;num\&quot;:\&quot;0\&quot;,\&quot;recentDay\&quot;:\&quot;\&quot;,\&quot;startTime\&quot;:\&quot;2020-06-01 00:00:00\&quot;,\&quot;endTime\&quot;:\&quot;2020-06-30 23:59:59\&quot;,\&quot;relation\&quot;:1,\&quot;filts\&quot;:[],\&quot;eventDesc\&quot;:\&quot;任意事件\&quot;}],\&quot;filts\&quot;:[],\&quot;relation\&quot;:\&quot;1\&quot;}}&quot;,&#xd;
		&quot;clusterType&quot;: &quot;cluster_by_static_condition&quot;,&#xd;
		&quot;remarks&quot;: &quot;备注sss&quot;&#xd;
	}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/con/add?projectId=${projectId}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Connection</stringProp>
                      <stringProp name="Header.value">keep-alive</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                  <stringProp name="JSON_PATH">$.return_message</stringProp>
                  <stringProp name="EXPECTED_VALUE">success</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取clusterId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">clusterId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="For分群条数上限" enabled="true">
              <stringProp name="ForeachController.inputVal">clusterId</stringProp>
              <stringProp name="ForeachController.returnVal">clusterId</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">180</stringProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除分群" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/con/delete?id=${clusterId}&amp;projectId=${projectId}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                  <stringProp name="JSON_PATH">$.return_message</stringProp>
                  <stringProp name="EXPECTED_VALUE">success</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ID分群条数上限" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分群列表-条件分群" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterTypes&quot;: [&quot;cluster_by_dynamic_condition&quot;, &quot;cluster_by_static_condition&quot;],&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 1,&#xd;
			&quot;pageSize&quot;: 10000&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/query?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器clusterId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">clusterId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userClusters[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">30</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ID分群-添加" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${account_id_1}&#xd;
${account_id_2}&#xd;
${account_id_3}&#xd;
${account_id_4}&#xd;
${account_id_5}&#xd;
1234&#xd;
11111111111111&#xd;
22222222222222</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/import-id/add?displayName=分群_${timeTag}&amp;clusterName=cohort_${timeTag}&amp;mainColumnName=%23account_id&amp;projectId=${projectId}&amp;remarks=ff</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="前置JDBC 查询任意10个account_id" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select account_id from ta.ta_user_${projectId} order by RAND() LIMIT 10;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">account_id</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCPreProcessor>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言共上传8条" enabled="true">
                  <stringProp name="JSON_PATH">$.data.uploadNum</stringProp>
                  <stringProp name="EXPECTED_VALUE">8</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言成功5条" enabled="true">
                  <stringProp name="JSON_PATH">$.data.successNum</stringProp>
                  <stringProp name="EXPECTED_VALUE">5</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取导入结果import_clusterId;mport_userNum" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">import_clusterId;import_userNum</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.clusterId;$.data.userNum</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言userNum5条" enabled="true">
                  <stringProp name="JSON_PATH">$.data.userNum</stringProp>
                  <stringProp name="EXPECTED_VALUE">5</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="For分群条数上限" enabled="true">
              <stringProp name="ForeachController.inputVal">clusterId</stringProp>
              <stringProp name="ForeachController.returnVal">clusterId</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">180</stringProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除分群" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/con/delete?id=${clusterId}&amp;projectId=${projectId}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                  <stringProp name="JSON_PATH">$.return_message</stringProp>
                  <stringProp name="EXPECTED_VALUE">success</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="结果分群条数上限" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分群列表-条件分群" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterTypes&quot;: [&quot;cluster_by_dynamic_condition&quot;, &quot;cluster_by_static_condition&quot;],&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 1,&#xd;
			&quot;pageSize&quot;: 10000&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/query?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                <stringProp name="JSON_PATH">$.return_message</stringProp>
                <stringProp name="EXPECTED_VALUE">success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器clusterId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">clusterId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userClusters[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">45</stringProp>
            </LoopController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WebSocket 结果分群-添加" enabled="true">
                <boolProp name="createNewConnection">true</boolProp>
                <boolProp name="TLS">true</boolProp>
                <stringProp name="server">${Host}</stringProp>
                <stringProp name="port">443</stringProp>
                <stringProp name="path">/websocket/query</stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">[&quot;data&quot;,{&quot;requestId&quot;:&quot;CLUSTER_ADD@@${timeTag}&quot;,&quot;projectId&quot;:${projectId},&quot;sourceData&quot;:{&quot;data&quot;:{&quot;commonHeader&quot;:{&quot;projectId&quot;:${projectId}},&quot;displayName&quot;:&quot;结果分群_${timeTag}&quot;,&quot;modelUserSearchRequest&quot;:{&quot;eventModel&quot;:0,&quot;sliceGroupVal&quot;:&quot;[]&quot;,&quot;sliceDate&quot;:&quot;2020-06-13&quot;,&quot;eventIndex&quot;:0,&quot;eventDate&quot;:&quot;2020-06-13(六)&quot;},&quot;qp&quot;:&quot;{\&quot;events\&quot;:[{\&quot;analysis\&quot;:\&quot;A101\&quot;,\&quot;analysisDesc\&quot;:\&quot;触发用户数\&quot;,\&quot;customEvent\&quot;:\&quot;\&quot;,\&quot;customFilters\&quot;:[],\&quot;eventName\&quot;:\&quot;player_register\&quot;,\&quot;eventDesc\&quot;:\&quot;player_register\&quot;,\&quot;eventType\&quot;:\&quot;event\&quot;,\&quot;eventNameDisplay\&quot;:\&quot;\&quot;,\&quot;eventSplitIndexes\&quot;:null,\&quot;filts\&quot;:[],\&quot;quota\&quot;:\&quot;\&quot;,\&quot;quotaDesc\&quot;:\&quot;\&quot;,\&quot;subTableType\&quot;:\&quot;\&quot;,\&quot;relation\&quot;:1,\&quot;type\&quot;:0}],\&quot;eventView\&quot;:{\&quot;groupBy\&quot;:[],\&quot;projectId\&quot;:23,\&quot;timeParticleSize\&quot;:\&quot;T1\&quot;,\&quot;filts\&quot;:[],\&quot;relation\&quot;:1,\&quot;eventSplit\&quot;:null,\&quot;recentDay\&quot;:\&quot;1-30\&quot;,\&quot;startTime\&quot;:\&quot;2020-06-02 00:00:00\&quot;,\&quot;endTime\&quot;:\&quot;2020-07-01 00:00:00\&quot;,\&quot;comparedByTime\&quot;:false,\&quot;comparedRecentDay\&quot;:\&quot;\&quot;,\&quot;comparedStartTime\&quot;:\&quot;\&quot;,\&quot;comparedEndTime\&quot;:\&quot;\&quot;},\&quot;reportId\&quot;:\&quot;\&quot;,\&quot;isLost\&quot;:false}&quot;,&quot;clusterType&quot;:&quot;cluster_by_result&quot;,&quot;remarks&quot;:&quot;&quot;,&quot;clusterCatalog&quot;:&quot;catalog_cluster&quot;,&quot;zoneOffset&quot;:null}},&quot;querySource&quot;:&quot;clusterAdd&quot;,&quot;zoneOffset&quot;:null}]</stringProp>
                <stringProp name="readTimeout">6000</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取result_clusterId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">result_clusterId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.[1].result.data</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言status" enabled="false">
                  <stringProp name="JSON_PATH">$.[1].status</stringProp>
                  <stringProp name="EXPECTED_VALUE">success</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                  <stringProp name="JSON_PATH">$.[1].result.return_code</stringProp>
                  <stringProp name="EXPECTED_VALUE">0</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1789324281">&quot;status&quot;:&quot;running&quot;</stringProp>
                    <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">48</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="For分群条数上限" enabled="true">
              <stringProp name="ForeachController.inputVal">clusterId</stringProp>
              <stringProp name="ForeachController.returnVal">clusterId</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">180</stringProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除分群" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v1/ta/user/cluster/con/delete?id=${clusterId}&amp;projectId=${projectId}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
                  <stringProp name="JSON_PATH">$.return_message</stringProp>
                  <stringProp name="EXPECTED_VALUE">success</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="标签列表" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;clusterTypes&quot;:  [&quot;tag_by_dynamic_condition&quot;, &quot;tag_by_static_condition&quot;, &quot;tag_by_import&quot;],&#xd;
		&quot;pagerHeader&quot;: {&#xd;
			&quot;pageNum&quot;: 1,&#xd;
			&quot;pageSize&quot;: 10000&#xd;
		}&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/ta/user/clusters/query?projectId=${projectId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="return_message=success" enabled="true">
              <stringProp name="JSON_PATH">$.return_message</stringProp>
              <stringProp name="EXPECTED_VALUE">success</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言标签条数正确" enabled="true">
              <stringProp name="JSON_PATH">$.data.pagerResult.totalNum</stringProp>
              <stringProp name="EXPECTED_VALUE">${cluster_ids_#}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="JDBC 查询所有标签id" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select id from ta.ta_user_cluster where  project_id=${projectId} and cluster_catalog=1 and status=1 ; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">cluster_ids</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言-判断返回的分群id数组正确" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;


int count=Integer.parseInt(vars.get(&quot;cluster_ids_#&quot;));
int[] clusters = new int[count];
for (int i=1;i&lt;=count;i++){
	log.info(vars.get(&quot;cluster_ids_&quot;+i));
	clusters[i-1]=Integer.parseInt(vars.get(&quot;cluster_ids_&quot;+i));
//	clusters.add(Integer.parseInt(vars.get(&quot;cluster_ids_&quot;+i)));
	}
Arrays.sort(clusters);
//Collections.sort(cluster_ids);
log.info(&quot;a&quot;+clusters);
JSONObject response=JSONObject.parseObject(prev.getResponseDataAsString());
JSONArray userClusters=response.getJSONObject(&quot;data&quot;).getJSONArray(&quot;userClusters&quot;);
int size=userClusters.size();
int[] resp_clusters=new int[size];
for(int i=0;i&lt;size;i++){
	int id=userClusters.getJSONObject(i).getInteger(&quot;id&quot;);
	resp_clusters[i]=id;
	}

Arrays.sort(resp_clusters);
log.info(&quot;s&quot;+resp_clusters);

if(!Arrays.equals(clusters,resp_clusters)){
	Failure=true;
	}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="调试取样器" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="权限管理模块" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell 获取路径相关" enabled="true">
          <stringProp name="BeanShellSampler.query">import org.apache.jmeter.services.FileServer;
String baseDir=FileServer.getFileServer().getBaseDir();
sep=System.getProperty(&quot;file.separator&quot;);
vars.put(&quot;binPath&quot;,System.getProperty(&quot;user.dir&quot;));
vars.put(&quot;baseDir&quot;,baseDir);
vars.put(&quot;sep&quot;,sep);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="常量定义" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1747812959">login_name</stringProp>
            <stringProp name="1216985755">password</stringProp>
            <stringProp name="-836030906">userId</stringProp>
            <stringProp name="-1545244403">Referer</stringProp>
            <stringProp name="-1924752570">Origin</stringProp>
            <stringProp name="2255304">Host</stringProp>
            <stringProp name="100589">env</stringProp>
            <stringProp name="1109191153">deviceID</stringProp>
            <stringProp name="78518">Now</stringProp>
            <stringProp name="-1010580219">openId</stringProp>
            <stringProp name="-1313938035">timeTag</stringProp>
            <stringProp name="-1412818312">companyId</stringProp>
            <stringProp name="-894832108">projectId</stringProp>
            <stringProp name="-513795904">login_name_root</stringProp>
            <stringProp name="409593862">password_root</stringProp>
            <stringProp name="1236166449">login_name_admin</stringProp>
            <stringProp name="-203521877">password_admin</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-184417335">
              <stringProp name="-906780733">jishanshan</stringProp>
              <stringProp name="-906780733">jishanshan</stringProp>
              <stringProp name="48788">158</stringProp>
              <stringProp name="1677225449">https://ta_test.thinkingdata.cn/</stringProp>
              <stringProp name="1677225449">https://ta_test.thinkingdata.cn/</stringProp>
              <stringProp name="-1602136395">ta_test.thinkingdata.cn</stringProp>
              <stringProp name="-1555436764">ta_test</stringProp>
              <stringProp name="710018195">e78b778213f7a7e9</stringProp>
              <stringProp name="-2044968860">${__time(yyyy-MM-dd hh:mm:ss,)}</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="-1958278767">${__time(yyyyMMddHHmmssSSS,)}</stringProp>
              <stringProp name="1575">18</stringProp>
              <stringProp name="48874">181</stringProp>
              <stringProp name="945445730">jiss-superadmin</stringProp>
              <stringProp name="945445730">jiss-superadmin</stringProp>
              <stringProp name="-1235338271">jiss-admin</stringProp>
              <stringProp name="-1235338271">jiss-admin</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="常量定义-demo" enabled="false">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1747812959">login_name</stringProp>
            <stringProp name="1216985755">password</stringProp>
            <stringProp name="-836030906">userId</stringProp>
            <stringProp name="-1545244403">Referer</stringProp>
            <stringProp name="-1924752570">Origin</stringProp>
            <stringProp name="2255304">Host</stringProp>
            <stringProp name="100589">env</stringProp>
            <stringProp name="1109191153">deviceID</stringProp>
            <stringProp name="78518">Now</stringProp>
            <stringProp name="-1010580219">openId</stringProp>
            <stringProp name="-1313938035">timeTag</stringProp>
            <stringProp name="-1412818312">companyId</stringProp>
            <stringProp name="-894832108">projectId</stringProp>
            <stringProp name="-513795904">login_name_root</stringProp>
            <stringProp name="409593862">password_root</stringProp>
            <stringProp name="1236166449">login_name_admin</stringProp>
            <stringProp name="-203521877">password_admin</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-146327576">
              <stringProp name="3079651">demo</stringProp>
              <stringProp name="-189229403">it789123</stringProp>
              <stringProp name="1630">31</stringProp>
              <stringProp name="1677225449">https://ta_test.thinkingdata.cn/</stringProp>
              <stringProp name="1677225449">https://ta_test.thinkingdata.cn/</stringProp>
              <stringProp name="-1602136395">ta_test.thinkingdata.cn</stringProp>
              <stringProp name="-1555436764">ta_test</stringProp>
              <stringProp name="710018195">e78b778213f7a7e9</stringProp>
              <stringProp name="-2044968860">${__time(yyyy-MM-dd hh:mm:ss,)}</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="-1958278767">${__time(yyyyMMddHHmmssSSS,)}</stringProp>
              <stringProp name="50">2</stringProp>
              <stringProp name="1601">23</stringProp>
              <stringProp name="3079651">demo</stringProp>
              <stringProp name="-189229403">it789123</stringProp>
              <stringProp name="3079651">demo</stringProp>
              <stringProp name="-189229403">it789123</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="请求默认值设置：域名（环境）、协议等信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-基础" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate,br</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Requested-With</stringProp>
              <stringProp name="Header.value">XMLHttpRequest</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">${Referer}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">${Origin}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Charset</stringProp>
              <stringProp name="Header.value">UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Connection</stringProp>
              <stringProp name="Header.value">keep-alive</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="数据库链接配置" enabled="true"/>
        <hashTree>
          <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="TaTest测试环境数据库配置" enabled="true">
            <boolProp name="autocommit">true</boolProp>
            <stringProp name="checkQuery">select 1</stringProp>
            <stringProp name="connectionAge">5000</stringProp>
            <stringProp name="connectionProperties"></stringProp>
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="dbUrl">jdbc:mysql:replication://address=(protocol=tcp)(type=master)(host=ta3)(port=6446),address=(protocol=tcp)(type=master)(host=ta1)(port=6446),address=(protocol=tcp)(type=master)(host=ta2)(port=6446)/ta?autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;socketTimeout=60000&amp;retriesAllDown=3&amp;connectTimeout=10000</stringProp>
            <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
            <stringProp name="initQuery"></stringProp>
            <boolProp name="keepAlive">true</boolProp>
            <stringProp name="password">ADe47iLoFtR4eERE</stringProp>
            <stringProp name="poolMax">10</stringProp>
            <boolProp name="preinit">false</boolProp>
            <stringProp name="timeout">10000</stringProp>
            <stringProp name="transactionIsolation">DEFAULT</stringProp>
            <stringProp name="trimInterval">60000</stringProp>
            <stringProp name="username">ta</stringProp>
          </JDBCDataSource>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="随机获取一个条件分群ID" enabled="false">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="query">select id,display_name,cluster_name,remarks,users_num from ta.ta_user_cluster where project_id=127 and open_id = &quot;TG-2e97f457-ebc0-4d70-a3ca-b12e1076aa2f&quot; and cluster_catalog = 0 order by RAND() limit 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">clusterId,display_name,cluster_name,remarks,users_num</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取当前账户创建的随机看板ID" enabled="false">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select dashbord_id,dashbord_name from ta.ta_event_dashbord where project_id=${projectId} and 
open_id =&quot;${openId}&quot; and stauts=1 order by RAND() limit 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dashbordId,dashbordName</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录-root" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="login_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${login_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">login_name</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="maxInactiveInterval" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">604800</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">maxInactiveInterval</stringProp>
              </elementProp>
              <elementProp name="lang" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">zh_CN</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lang</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/login/auth</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="结果返回是否为：SUCCESS" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="481733669">{&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;SUCCESS&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="权限管理" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="权限管理-用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edit_batchSize" elementType="Argument">
                <stringProp name="Argument.name">edit_batchSize</stringProp>
                <stringProp name="Argument.value">${__Random(60,300,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="edit_syncInterval" elementType="Argument">
                <stringProp name="Argument.name">edit_syncInterval</stringProp>
                <stringProp name="Argument.value">${__Random(50,500,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="edit_ipWhitelist" elementType="Argument">
                <stringProp name="Argument.name">edit_ipWhitelist</stringProp>
                <stringProp name="Argument.value">192.168.1.${__Random(1,255,)},192.168.3.${__Random(1,255,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="edit_vuserIdItems" elementType="Argument">
                <stringProp name="Argument.name">edit_vuserIdItems</stringProp>
                <stringProp name="Argument.value">[{&quot;columnDesc&quot;:&quot;账户ID&quot;,&quot;columnName&quot;:&quot;#account_id&quot;,&quot;selectType&quot;:&quot;string&quot;,&quot;tableType&quot;:&quot;0&quot;},{&quot;columnDesc&quot;:&quot;访客ID&quot;,&quot;columnName&quot;:&quot;#distinct_id&quot;,&quot;selectType&quot;:&quot;string&quot;,&quot;tableType&quot;:&quot;0&quot;}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newLoginName" elementType="Argument">
                <stringProp name="Argument.name">newLoginName</stringProp>
                <stringProp name="Argument.value">jishanshan-autotest</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="new_dataPowerId" elementType="Argument">
                <stringProp name="Argument.name">new_dataPowerId</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="new_roleName" elementType="Argument">
                <stringProp name="Argument.name">new_roleName</stringProp>
                <stringProp name="Argument.value">member</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="importProjectId" elementType="Argument">
                <stringProp name="Argument.name">importProjectId</stringProp>
                <stringProp name="Argument.value">197</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="prj_new_roleDesc" elementType="Argument">
                <stringProp name="Argument.name">prj_new_roleDesc</stringProp>
                <stringProp name="Argument.value">角色test</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="prj_edit_roleDesc" elementType="Argument">
                <stringProp name="Argument.name">prj_edit_roleDesc</stringProp>
                <stringProp name="Argument.value">角色test2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="prj_new_baseRole" elementType="Argument">
                <stringProp name="Argument.name">prj_new_baseRole</stringProp>
                <stringProp name="Argument.value">member</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cmp_new_roleDesc" elementType="Argument">
                <stringProp name="Argument.name">cmp_new_roleDesc</stringProp>
                <stringProp name="Argument.value">sysroletest</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cmp_edit_roleDesc" elementType="Argument">
                <stringProp name="Argument.name">cmp_edit_roleDesc</stringProp>
                <stringProp name="Argument.value">roletest2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cmp_new_baseRole" elementType="Argument">
                <stringProp name="Argument.name">cmp_new_baseRole</stringProp>
                <stringProp name="Argument.value">analyst</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="new_companyName" elementType="Argument">
                <stringProp name="Argument.name">new_companyName</stringProp>
                <stringProp name="Argument.value">吉姗姗公司autotest-create</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="edit_companyName" elementType="Argument">
                <stringProp name="Argument.name">edit_companyName</stringProp>
                <stringProp name="Argument.value">吉姗姗公司autotest-edit</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="new_dataPowerName" elementType="Argument">
                <stringProp name="Argument.name">new_dataPowerName</stringProp>
                <stringProp name="Argument.value">dataPower_autotest-new</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="edit_dataPowerName" elementType="Argument">
                <stringProp name="Argument.name">edit_dataPowerName</stringProp>
                <stringProp name="Argument.value">dataPower_autotest-edit</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="new_groupName" elementType="Argument">
                <stringProp name="Argument.name">new_groupName</stringProp>
                <stringProp name="Argument.value">group_autotest-new</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="edit_groupName" elementType="Argument">
                <stringProp name="Argument.name">edit_groupName</stringProp>
                <stringProp name="Argument.value">group_autotest-edit</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="new_prjName" elementType="Argument">
                <stringProp name="Argument.name">new_prjName</stringProp>
                <stringProp name="Argument.value">吉姗姗项目autotest-create</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="edit_prjName" elementType="Argument">
                <stringProp name="Argument.name">edit_prjName</stringProp>
                <stringProp name="Argument.value">吉姗姗项目utotest-edit</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="权限管理-公司管理" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建公司" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${new_companyName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                  <elementProp name="totalEventLimit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">totalEventLimit</stringProp>
                  </elementProp>
                  <elementProp name="serverTerm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2020-10-03</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">serverTerm</stringProp>
                  </elementProp>
                  <elementProp name="projectNumLimit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectNumLimit</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/createCompany</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询新增的公司id" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select company_id from ta.ta_company_info where company_name=&quot;${new_companyName}&quot; ORDER BY company_id desc limit 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">new_company_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=2" enabled="false">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">2</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑公司名称" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="companyId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${new_company_id_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${edit_companyName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/editcompany</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">编辑接口问题：无论传入的公司名称是否存在都返回正确</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询修改后名称的公司" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select count(*) from ta.ta_company_info where company_name=&quot;${edit_companyName}&quot; and company_id=${new_company_id_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">edit_count</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言公司名称修改成功" enabled="true">
                <stringProp name="BeanShellAssertion.query">
int count=Integer.parseInt(vars.get(&quot;edit_count_1&quot;));
if (count!=1){
	Failure=true;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取License状态" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/loadLicenseInfo?_t=1593755805503</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言alertType=NO_ALERT" enabled="true">
                <stringProp name="JSON_PATH">$.data.alertType</stringProp>
                <stringProp name="EXPECTED_VALUE">NO_ALERT</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC 删除创建的公司" enabled="false">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from ta.ta_company_info where company_id=${new_company_id_1};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="切换账号--由于alert执行一次后失效，故不加入日常case" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="login_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${login_name_root}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_name</stringProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${password_root}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                  </elementProp>
                  <elementProp name="maxInactiveInterval" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">604800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">maxInactiveInterval</stringProp>
                  </elementProp>
                  <elementProp name="lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">zh_CN</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lang</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/login/auth</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="结果返回是否为：SUCCESS" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="481733669">{&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;SUCCESS&quot;}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取License状态-DATE_ALERT" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/loadLicenseInfo?_t=1593755805503</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言alertType=DATE_ALERT" enabled="true">
                <stringProp name="JSON_PATH">$.data.alertType</stringProp>
                <stringProp name="EXPECTED_VALUE">DATE_ALERT</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取alertType;alertMsgNum" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">alertType;alertMsgNum</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.alertType;$.data.alertMsgNum</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;;0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认License快到期信息" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/ensureLicenseInfo?alertMsgNum=${alertMsgNum}&amp;alertType=${alertType}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="切回原账号-----end--" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="login_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${login_name}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_name</stringProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${password}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                  </elementProp>
                  <elementProp name="maxInactiveInterval" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">604800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">maxInactiveInterval</stringProp>
                  </elementProp>
                  <elementProp name="lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">zh_CN</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lang</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/login/auth</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="结果返回是否为：SUCCESS" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="481733669">{&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;SUCCESS&quot;}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="结果状态处理器" enabled="true">
                <intProp name="OnError.action">1</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="权限管理-项目管理" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目接入概况" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/projectAccSummary?_t=1593757555477</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询所有company_id" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select company_id from ta.ta_company_info where status=1 ORDER BY company_id asc;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">company_ids</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell f返回的公司id数组正确" enabled="false">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;

int count=Integer.parseInt(vars.get(&quot;company_ids_#&quot;));
int[] company_ids = new int[count];
for (int i=1;i&lt;=count;i++){
	log.info(vars.get(&quot;company_ids_&quot;+i));
	company_ids[i-1]=Integer.parseInt(vars.get(&quot;company_ids_&quot;+i));
//	clusters.add(Integer.parseInt(vars.get(&quot;cluster_ids_&quot;+i)));
	}
log.info(&quot;A&quot;+company_ids);	

JSONObject resp=JSONObject.parseObject(prev.getResponseDataAsString());
JSONArray companylist=resp.getJSONArray(&quot;data&quot;);
int len=companylist.size();
int[] companyIds=new int[len];
for(int i=0;i&lt;len;i++){
	companyIds[i]=companylist.getJSONObject(i).getInteger(&quot;companyId&quot;);
	log.info(&quot;aaa&quot;+companyIds[i]);
	}
log.info(&quot;B&quot;+companyIds);
Arrays.sort(companyIds);

log.info(&quot;S&quot;+companyIds);
if(!Arrays.equals(company_ids,companyIds)){
	Failure=true;
	}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言存在companyId" enabled="true">
                <stringProp name="JSON_PATH">$.data[*].companyId</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目接入详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/projectAccDetail?_t=1593756192596&amp;companyId=${companyId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言存在projectId" enabled="true">
                <stringProp name="JSON_PATH">$.data.data[*].projectId</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言存在appid" enabled="true">
                <stringProp name="JSON_PATH">$.data.data[*].appid</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言存在projectName" enabled="true">
                <stringProp name="JSON_PATH">$.data.data[*].projectName</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目配置信息" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/projectconfig?_t=1593684242135&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select with_sql_ide,project_type,load_history,batch_size,sync_interval,api_secret,receiver_ip_whitelist,debug_device_list,v_user_id_status,v_user_id_items,tz_enabled,
tz_offset_column,tz_offset,tz_used_offsets from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">with_sql_ide,project_type,load_history,batch_size,sync_interval,api_secret,receiver_ip_whitelist,debug_device_list,v_user_id_status,v_user_id_items,tz_enabled, tz_offset_column,tz_offset,tz_used_offsets</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言-bak" enabled="false">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;

//获取接口返回结果
JSONObject resp=JSONObject.parseObject(prev.getResponseDataAsString());
JSONObject data=resp.getJSONObject(&quot;data&quot;);
log.info(&quot;1&quot;+data);

//获取数据库查询结果
JSONArray project_config=new JSONArray(vars.getObject(&quot;project_config&quot;));
JSONObject config  = project_config.getJSONObject(0);
log.info(&quot;2&quot;+project_config);

public static void message(String sqlName,String rspName){
	FailureMessage=&quot;sqlName:&quot;+sqlName+&quot;不等于rspName：&quot;+rspName;
	
	}

if(config.getInteger(&quot;batch_size&quot;)!=data.getInteger(&quot;batchSize&quot;)){
	Failure=true;
	message(&quot;batch_size&quot;,&quot;batchSize&quot;);
	}
if(config.getInteger(&quot;load_history&quot;)!=data.getInteger(&quot;loadHistory&quot;)){
	Failure=true;
	message(&quot;load_history&quot;,&quot;loadHistory&quot;);
	}
if(config.getInteger(&quot;project_type&quot;)!=data.getInteger(&quot;projectType&quot;)){
	Failure=true;
	message(&quot;project_type&quot;,&quot;projectType&quot;);
	}

if(config.getInteger(&quot;sync_interval&quot;)!=data.getInteger(&quot;syncInterval&quot;)){
	Failure=true;
	message(&quot;sync_interval&quot;,&quot;syncInterval&quot;);
	}

if(config.getInteger(&quot;tz_enabled&quot;)!=data.getInteger(&quot;tzEnabled&quot;)){
	Failure=true;
	message(&quot;tz_enabled&quot;,&quot;tzEnabled&quot;);
	}

if(config.getInteger(&quot;tz_offset&quot;)!=data.getInteger(&quot;tzOffset&quot;)){
	Failure=true;
	message(&quot;tz_offset&quot;,&quot;tzOffset&quot;);
	}
	
		
//if(config.getString(&quot;receiver_ip_whitelist&quot;)!=data.getString(&quot;ipWhitelist&quot;)){
//	Failure=true;
//	message(&quot;receiver_ip_whitelist&quot;,&quot;ipWhitelist&quot;);
//	}
//	

//if(config.getString(&quot;tz_used_offsets&quot;)!=data.getString(&quot;tzUsedOffsets&quot;)){
//	Failure=true;
//	message(&quot;tz_used_offsets&quot;,&quot;tzUsedOffsets&quot;);
//	}



</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言-hasTzDefault" enabled="true">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;

//获取接口返回结果
JSONObject resp=JSONObject.parseObject(prev.getResponseDataAsString());
JSONObject data=resp.getJSONObject(&quot;data&quot;);
log.info(&quot;1&quot;+data);
boolean hasTzDefault=data.getBoolean(&quot;hasTzDefault&quot;);
//获取数据库查询结果
//String tz_used_offsets=data.getString(&quot;tzUsedOffsets&quot;);
String tz_used_offsets=vars.get(&quot;tz_used_offsets_1&quot;);
if ( (tz_used_offsets==&quot;&quot; &amp;&amp; hasTzDefault) || (tz_used_offsets!=&quot;&quot; &amp;&amp; !hasTzDefault) ){
	Failure=true;
	FailureMessage=&quot;hasTzDefault与实际不匹配&quot;;
	}

</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言loadHistory" enabled="true">
                <stringProp name="JSON_PATH">$.data.loadHistory</stringProp>
                <stringProp name="EXPECTED_VALUE">${load_history_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言tzUsedOffsets" enabled="true">
                <stringProp name="JSON_PATH">$.data.tzUsedOffsets</stringProp>
                <stringProp name="EXPECTED_VALUE">${tz_used_offsets_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言batchSize" enabled="true">
                <stringProp name="JSON_PATH">$.data.batchSize</stringProp>
                <stringProp name="EXPECTED_VALUE">${batch_size_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言syncInterval" enabled="true">
                <stringProp name="JSON_PATH">$.data.syncInterval</stringProp>
                <stringProp name="EXPECTED_VALUE">${sync_interval_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言projectType" enabled="true">
                <stringProp name="JSON_PATH">$.data.projectType</stringProp>
                <stringProp name="EXPECTED_VALUE">${project_type_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言tzEnabled" enabled="true">
                <stringProp name="JSON_PATH">$.data.tzEnabled</stringProp>
                <stringProp name="EXPECTED_VALUE">${tz_enabled_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言tzOffset" enabled="true">
                <stringProp name="JSON_PATH">$.data.tzOffset</stringProp>
                <stringProp name="EXPECTED_VALUE">${tz_offset_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言tzOffsetColumn" enabled="true">
                <stringProp name="JSON_PATH">$.data.tzOffsetColumn</stringProp>
                <stringProp name="EXPECTED_VALUE">${tz_offset_column_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言ipWhitelist" enabled="true">
                <stringProp name="JSON_PATH">$.data.ipWhitelist</stringProp>
                <stringProp name="EXPECTED_VALUE">${receiver_ip_whitelist_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言vUserIdStatus" enabled="true">
                <stringProp name="JSON_PATH">$.data.vUserIdStatus</stringProp>
                <stringProp name="EXPECTED_VALUE">${v_user_id_status_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言vUserIdItems" enabled="true">
                <stringProp name="JSON_PATH">$.data.vUserIdItems</stringProp>
                <stringProp name="EXPECTED_VALUE">${__urldecode(${v_user_id_items_1})}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言withSqlIde" enabled="true">
                <stringProp name="JSON_PATH">$.data.withSqlIde</stringProp>
                <stringProp name="EXPECTED_VALUE">${with_sql_ide_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建新项目（生成APP key）" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="companyId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyId</stringProp>
                  </elementProp>
                  <elementProp name="loadHistory" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">loadHistory</stringProp>
                  </elementProp>
                  <elementProp name="projectName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${new_prjName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/generateAppkey</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取new_projectId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">new_projectId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.projectId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑项目名称" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${new_projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="projectName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${edit_prjName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/editproject</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除项目" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="companyId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyId</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${new_projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/deletProject</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC 删除创建的项目" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from ta.ta_project_info where company_id=${companyId} and project_id=${new_projectId};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC 删除创建者的项目角色auth_user_role" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from ta.auth_user_role where company_id=${companyId} and project_id=${new_projectId};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="权限管理-项目配置" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="历史数据导入-开启" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="switchCraft" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">switchCraft</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/historyData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select load_history from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">eidt_load_history</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言loadHistory" enabled="false">
                <stringProp name="JSON_PATH">$.data.loadHistory</stringProp>
                <stringProp name="EXPECTED_VALUE">${eidt_load_history_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言load_history=1" enabled="true">
                <stringProp name="BeanShellAssertion.query">eidt_load_history=Integer.parseInt(vars.get(&quot;eidt_load_history_1&quot;));
if (eidt_load_history!=1){
	Failure=true;
	FailureMessage=&quot;load_history设置开启失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="历史数据导入-关闭" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="switchCraft" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">switchCraft</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/historyData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select load_history from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">eidt_load_history</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言load_history=0" enabled="true">
                <stringProp name="BeanShellAssertion.query">eidt_load_history=Integer.parseInt(vars.get(&quot;eidt_load_history_1&quot;));
if (eidt_load_history!=0){
	Failure=true;
	FailureMessage=&quot;load_history设置关闭失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户端SDK属性配置" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;batchSize&quot;: ${edit_batchSize},&#xd;
		&quot;syncInterval&quot;: ${edit_syncInterval}&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/project/config/clientsdk?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select batch_size,sync_interval from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">edit_batch_size,edit_sync_interval</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言batch_size" enabled="true">
                <stringProp name="BeanShellAssertion.query">edit_batch_size_1=Integer.parseInt(vars.get(&quot;edit_batch_size_1&quot;));
edit_batchSize=Integer.parseInt(vars.get(&quot;edit_batchSize&quot;));
if (edit_batchSize!=edit_batch_size_1){
	Failure=true;
	FailureMessage=&quot;batch_size设置失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言sync_interval" enabled="true">
                <stringProp name="BeanShellAssertion.query">edit_sync_interval_1=Integer.parseInt(vars.get(&quot;edit_sync_interval_1&quot;));
edit_syncInterval=Integer.parseInt(vars.get(&quot;edit_syncInterval&quot;));
if (edit_syncInterval!=edit_sync_interval_1){
	Failure=true;
	FailureMessage=&quot;syncInterval设置失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目时区配置-开启" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;tzEnabled&quot;: 1&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/project/config/vTzSave?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select tz_enabled from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">eidt_tz_enabled</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言tz_enabled=1" enabled="true">
                <stringProp name="BeanShellAssertion.query">eidt_tz_enabled_1=Integer.parseInt(vars.get(&quot;eidt_tz_enabled_1&quot;));
if (eidt_tz_enabled_1!=1){
	Failure=true;
	FailureMessage=&quot;tz_enabled 设置开启失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目时区配置-关闭" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;tzEnabled&quot;: 0&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/project/config/vTzSave?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select tz_enabled from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">eidt_tz_enabled</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言tz_enabled=0" enabled="true">
                <stringProp name="BeanShellAssertion.query">eidt_tz_enabled_1=Integer.parseInt(vars.get(&quot;eidt_tz_enabled_1&quot;));
if (eidt_tz_enabled_1!=0){
	Failure=true;
	FailureMessage=&quot;tz_enabled 设置开启失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户多ID项配置-设置并开启" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;vuserIdItems&quot;: ${edit_vuserIdItems} ,&#xd;
		&quot;vuserIdStatus&quot;: 1&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/project/config/vUserIdItemsSave?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">参数vuserIdItems可选</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select v_user_id_status,v_user_id_items from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">edit_vuser_id_status,edit_vuser_id_items</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言edit_vuser_id_status=1" enabled="true">
                <stringProp name="BeanShellAssertion.query">edit_vuser_id_status=Integer.parseInt(vars.get(&quot;edit_vuser_id_status_1&quot;));
if (edit_vuser_id_status!=1){
	Failure=true;
	FailureMessage=&quot;edit_vuser_id_status 设置开启失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言edit_vuser_id_items" enabled="true">
                <stringProp name="BeanShellAssertion.query">String edit_vuser_id_items=vars.get(&quot;edit_vuser_id_items_1&quot;);
String edit_vuserIdItems=vars.get(&quot;edit_vuserIdItems&quot;);
log.info(edit_vuser_id_items);
log.info(edit_vuserIdItems);
if (!edit_vuserIdItems.equals(edit_vuser_id_items)){
	Failure=true;
//	FailureMessage=&quot;edit_vuser_id_items 设置失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户多ID项配置-设置属性清空" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;vuserIdItems&quot;:  [],&#xd;
		&quot;vuserIdStatus&quot;: 1&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/project/config/vUserIdItemsSave?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">参数vuserIdItems可选</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select v_user_id_status,v_user_id_items from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">edit_vuser_id_status,edit_vuser_id_items</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言edit_vuser_id_status=1" enabled="true">
                <stringProp name="BeanShellAssertion.query">edit_vuser_id_status=Integer.parseInt(vars.get(&quot;edit_vuser_id_status_1&quot;));
if (edit_vuser_id_status!=1){
	Failure=true;
	FailureMessage=&quot;edit_vuser_id_status 设置开启失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言edit_vuser_id_items" enabled="true">
                <stringProp name="BeanShellAssertion.query">String edit_vuser_id_items=vars.get(&quot;edit_vuser_id_items_1&quot;);
String edit_vuserIdItems=&quot;[]&quot;;
log.info(edit_vuser_id_items);
log.info(edit_vuserIdItems);
if (!edit_vuserIdItems.equals(edit_vuser_id_items)){
	Failure=true;
//	FailureMessage=&quot;edit_vuser_id_items 设置失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户多ID项配置-关闭" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: {&#xd;
		&quot;commonHeader&quot;: {&#xd;
			&quot;projectId&quot;: ${projectId}&#xd;
		},&#xd;
		&quot;vuserIdStatus&quot;: 0&#xd;
	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/project/config/vUserIdItemsSave?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">参数vuserIdItems可选</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select v_user_id_status from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">edit_vuser_id_status</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言edit_vuser_id_status=0" enabled="true">
                <stringProp name="BeanShellAssertion.query">edit_vuser_id_status=Integer.parseInt(vars.get(&quot;edit_vuser_id_status_1&quot;));
if (edit_vuser_id_status!=0){
	Failure=true;
	FailureMessage=&quot;edit_vuser_id_status 设置开启失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ip白名单配置" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="ipWhitelist" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${edit_ipWhitelist}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ipWhitelist</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/ipWhiteListConfig</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">ip参数为空则清空</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select receiver_ip_whitelist from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ed_receiver_ip_whitelist</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言receiver_ip_whitelist" enabled="true">
                <stringProp name="BeanShellAssertion.query">String ed_receiver_ip_whitelist=vars.get(&quot;ed_receiver_ip_whitelist_1&quot;);
String edit_ipWhitelist=vars.get(&quot;edit_ipWhitelist&quot;);
log.info(ed_receiver_ip_whitelist);
log.info(edit_ipWhitelist);
if (!edit_ipWhitelist.equals(ed_receiver_ip_whitelist)){
	Failure=true;
//	FailureMessage=&quot;receiver_ip_whitelist 设置失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ip白名单配置-置空" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="ipWhitelist" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ipWhitelist</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/ipWhiteListConfig</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">ip参数为空则清空</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目的配置信息" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select receiver_ip_whitelist from ta.ta_project_info where company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ed_receiver_ip_whitelist</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言receiver_ip_whitelist" enabled="true">
                <stringProp name="BeanShellAssertion.query">String ed_receiver_ip_whitelist=vars.get(&quot;ed_receiver_ip_whitelist_1&quot;);
//String edit_ipWhitelist=vars.get(&quot;edit_ipWhitelist&quot;);
log.info(ed_receiver_ip_whitelist);
//log.info(edit_ipWhitelist);
if (!&quot;&quot;.equals(ed_receiver_ip_whitelist)){
	Failure=true;
//	FailureMessage=&quot;receiver_ip_whitelist 设置失败&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="权限管理-用户管理" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员搜索" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/membersearch?_t=1593741787789&amp;page=1&amp;pageSize=1000&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目成员" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select a.open_id from ta.auth_user_role a INNER JOIN ta.auth_user b on a.open_id=b.open_id where a.company_id=${companyId} and (a.role_name=&quot;root&quot; or a.project_id=${projectId})  and a.role_name!=&quot;tdroot&quot; and a.`status` in (1,2);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">open_ids</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言返回的openId数组正确" enabled="false">
                <stringProp name="TestPlan.comments">TODO-295project查询出重复的root账号</stringProp>
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;

int count=Integer.parseInt(vars.get(&quot;open_ids_#&quot;));
String[] open_ids = new String[count];
for (int i=1;i&lt;=count;i++){
	log.info(vars.get(&quot;open_ids_&quot;+i));
	open_ids[i-1]=vars.get(&quot;open_ids_&quot;+i);
	}
log.info(&quot;aa&quot;+open_ids);	
Arrays.sort(open_ids);

JSONObject resp=JSONObject.parseObject(prev.getResponseDataAsString());
JSONArray memberList=resp.getJSONObject(&quot;data&quot;).getJSONArray(&quot;result&quot;);
int len=memberList.size();
String[] openIds=new String[len];
for(int i=0;i&lt;len;i++){
	openIds[i]=memberList.getJSONObject(i).getString(&quot;openId&quot;);
	log.info(&quot;bb&quot;+openIds[i]);
	}
//log.info(&quot;cc&quot;+openIds);
Arrays.sort(openIds);

if(!Arrays.equals(open_ids,openIds)){
	Failure=true;
	FailureMessage=&quot;接口返回openIds:&quot;+Arrays.toString(openIds)+&quot;\n db查询open_id&quot;+Arrays.toString(open_ids);
	}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息导入-创建新成员" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="loginNames" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${newLoginName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">loginNames</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/importmember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">返回 new_userStatus, authRoles，authDataPowers</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言loginName" enabled="true">
                <stringProp name="JSON_PATH">$.data.new_userStatus[0].loginName</stringProp>
                <stringProp name="EXPECTED_VALUE">${newLoginName}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言status=5" enabled="true">
                <stringProp name="JSON_PATH">$.data.new_userStatus[0].status</stringProp>
                <stringProp name="EXPECTED_VALUE">5</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言password--todo" enabled="true">
                <stringProp name="JSON_PATH">$.data.new_userStatus[0].password</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意dataPowerId -for编辑" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">random1_dataPowerId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.authDataPowers[*].dataPowerId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意role_name-For编辑" enabled="true">
                <stringProp name="TestPlan.comments">任意role_name--第一个root不允许编辑</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">random1_roleName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.authRoles[1:].role_name</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取loginName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">new_loginName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.new_userStatus[0].loginName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取password" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">new_password</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.new_userStatus[0].password</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息导入-新成员保存" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="qp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userRoles&quot;:[${new_user}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">qp</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/savemember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 入参处理" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Random;

Random random=new Random();
//上接口返回：{&quot;data&quot;:{&quot;columns&quot;:[{&quot;needFill&quot;:false,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_id&quot;,&quot;selectType&quot;:&quot;string&quot;}},
//{&quot;needFill&quot;:true,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_name&quot;}}]},&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;success&quot;}
String resp=prev.getResponseDataAsString();
//返回的数据提取data中部分
JSONObject data=JSONObject.parseObject(resp).getJSONObject(&quot;data&quot;);

JSONObject new_userStatus=data.getJSONArray(&quot;new_userStatus&quot;).getJSONObject(0);
JSONArray authRoles=data.getJSONArray(&quot;authRoles&quot;);
//去掉root角色，避免编辑root不成功导致 编辑接口报错
if(&quot;root&quot;.equals(authRoles.getJSONObject(0).getString(&quot;role_name&quot;))){
	authRoles.remove(0);
	}
int rand_role_index=random.nextInt(authRoles.size());
String roleName=authRoles.getJSONObject(rand_role_index).getString(&quot;role_name&quot;);
log.info(&quot;a&quot;+roleName);
JSONArray authDataPowers=data.getJSONArray(&quot;authDataPowers&quot;);
int rand_power_index=random.nextInt(authDataPowers.size());
int dataPowerId=authDataPowers.getJSONObject(rand_power_index).getInteger(&quot;dataPowerId&quot;);
log.info(&quot;b&quot;+dataPowerId);
//&quot;dataPowerId&quot;:60,&quot;roleName&quot;:&quot;member_1280053513846419456&quot;}]}

new_userStatus.put(&quot;dataPowerId&quot;,dataPowerId);
new_userStatus.put(&quot;roleName&quot;,roleName);
String new_user=new_userStatus.toJSONString();
log.info(new_user);
vars.put(&quot;new_user&quot;,new_user);
//property.put(&quot;selectType&quot;,selectType);
////将两个json合并
//JSONObject uploadParamObj=JSONObject.parseObject(uploadParam);
//JSONObject createParamObj=new JSONObject();
//createParamObj.putAll(data);
//createParamObj.putAll(uploadParamObj);
////合并后json object转成string
//String createParam=createParamObj.toJSONString();
//vars.put(&quot;createParam_user&quot;,createParam);
//log.info(resp);
//log.info(uploadParam);
//log.info(&quot;respObj:&quot;+respObj)

</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询新增成员" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select a.user_id,a.open_id from ta.auth_user a INNER JOIN ta.auth_user_role b on a.open_id=b.open_id and b.company_id=${companyId} and b.project_id=${projectId} 
where a.login_name=&quot;${newLoginName}&quot; and a.`status` in (1,2);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">new_user_id,new_open_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言new_user_id_#" enabled="true">
                <stringProp name="BeanShellAssertion.query">int count=Integer.parseInt(vars.get(&quot;new_user_id_#&quot;));
if(count!=1){
	Failure=false;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登陆新用户" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="login_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${new_loginName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_name</stringProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${new_password}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                  </elementProp>
                  <elementProp name="maxInactiveInterval" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">604800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">maxInactiveInterval</stringProp>
                  </elementProp>
                  <elementProp name="lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">zh_CN</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lang</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/login/auth</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="结果返回是否为：SUCCESS" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="481733669">{&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;SUCCESS&quot;}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器--if 上个case成功" enabled="true">
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="校验用户昵称是否存在-是" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/checkUserame?_t=1594123238774&amp;userName=%E5%90%89%E5%A7%97%E5%A7%97-2</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">code=-3000 事件数超过限制  localeMsg=error.auth.permission_denied.over_events_num_limit, localeMsgParams=[117154418, 100000000],</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=-1015" enabled="true">
                  <stringProp name="JSON_PATH">$.return_code</stringProp>
                  <stringProp name="EXPECTED_VALUE">-1015</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="校验用户昵称是否存在-否" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/checkUserame?_t=1594123238774&amp;userName=${new_loginName}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">code=-3000 事件数超过限制  localeMsg=error.auth.permission_denied.over_events_num_limit, localeMsgParams=[117154418, 100000000],</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                  <stringProp name="JSON_PATH">$.return_code</stringProp>
                  <stringProp name="EXPECTED_VALUE">0</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首次登陆修改用户密码" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="userName" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${new_loginName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">userName</stringProp>
                    </elementProp>
                    <elementProp name="pswd" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">123654</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pswd</stringProp>
                    </elementProp>
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/editpswd</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">code=-3000 事件数超过限制  localeMsg=error.auth.permission_denied.over_events_num_limit, localeMsgParams=[117154418, 100000000],</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                  <stringProp name="JSON_PATH">$.return_code</stringProp>
                  <stringProp name="EXPECTED_VALUE">0</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="切换回原用户" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="login_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${login_name}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_name</stringProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${password}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                  </elementProp>
                  <elementProp name="maxInactiveInterval" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">604800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">maxInactiveInterval</stringProp>
                  </elementProp>
                  <elementProp name="lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">zh_CN</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lang</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/login/auth</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="结果返回是否为：SUCCESS" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="481733669">{&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;SUCCESS&quot;}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息导入-创建新成员已存在" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="loginNames" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${newLoginName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">loginNames</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/importmember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">返回exist_userStatus, authRoles，authDataPowers</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言loginName" enabled="true">
                <stringProp name="JSON_PATH">$.data.exist_userStatus[0].loginName</stringProp>
                <stringProp name="EXPECTED_VALUE">${newLoginName}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改其他用户密码" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">123456</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                  </elementProp>
                  <elementProp name="targetUserId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${new_user_id_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">targetUserId</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/changePassword</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息编辑" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="targetUserId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${new_user_id_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">targetUserId</stringProp>
                  </elementProp>
                  <elementProp name="roleName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${random1_roleName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">roleName</stringProp>
                  </elementProp>
                  <elementProp name="dataPowerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${random1_dataPowerId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">dataPowerId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/editmember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询编辑后role_name" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT role_name from ta.auth_user_role where open_id=&quot;${new_open_id_1}&quot; and company_id=${companyId} and project_id=${projectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">edit_role_name</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询编辑后data_power_id" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_power_id from ta.auth_user_data_power where open_id=&quot;${new_open_id_1}&quot; and  project_id=${projectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">edit_data_power_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言role_name" enabled="true">
                <stringProp name="TestPlan.comments">字符串不相等通用</stringProp>
                <stringProp name="BeanShellAssertion.query">String str1=bsh.args[0];
String str2=bsh.args[1];

if(!str1.equals(str2)){
	Failure=true;
	FailureMessage=str1 + &quot; 不等于 &quot; + str2;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${random1_roleName} ${edit_role_name_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言data_power_id" enabled="false">
                <stringProp name="BeanShellAssertion.query">String arg1=bsh.args[0];
String arg2=bsh.args[1];
String arg3=bsh.args[2];

log.info(&quot;arg1 &quot;+arg1);
log.info(&quot;arg2&quot;+arg2);
log.info(&quot;arg3&quot;+arg3);
if(&quot;0&quot;.equals(arg3)){
	if(!&quot;-1&quot;.equals(arg1))
	{
		Failure=true;
		FailureMessage=&quot;传参不等于-1，但是sql没有查到&quot;;
	}

}
else if(!arg1.equals(arg2)){
		Failure=true;
		FailureMessage=str1 + &quot; 不等于 &quot; + str2;
		}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${random1_dataPowerId} ${edit_data_power_id_1} ${edit_data_power_id_#}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="false">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select data_power_id from ta.auth_user_data_power where open_id=&quot;${new_open_id_1}&quot; and  project_id=${projectId};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">edit_data_power_id2</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="移交工作接收用户列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/handover-work-receivers?_t=1594093833795&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意移交人" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">transfer_userId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].userId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="移交工作并从项目中删除用户" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="handoverToUserId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${transfer_userId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">handoverToUserId</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="targetUserId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${new_user_id_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">targetUserId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/handover-work-then-del-member</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息导入-已有成员" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/importmember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">返回 user_list  authRoles，authDataPowers</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言userlist至少存在一个人" enabled="true">
                <stringProp name="JSON_PATH">$.data.userlist[0].userId</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意userlist -for保存" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">random_user</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userlist[*]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意role_name-For保存" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">random_roleName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.authRoles[1:].role_name</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意dataPowerId -for保存" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">random_dataPowerId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.authDataPowers[*].dataPowerId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取所有userId -for保存" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">all_userId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userlist[*].userId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息导入-已有成员保存-单个" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="qp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userRoles&quot;:[${rand_user}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">qp</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/savemember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 入参处理" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters">${random_user} ${random_roleName} ${random_dataPowerId}</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Random;


JSONObject random_user=JSONObject.parseObject(bsh.args[0]);
String rand_userId=random_user.getString(&quot;userId&quot;);
String roleName=bsh.args[1];
log.info(&quot;a&quot;+roleName);

int dataPowerId=Integer.parseInt(bsh.args[2]);
log.info(&quot;b&quot;+dataPowerId);


random_user.put(&quot;dataPowerId&quot;,dataPowerId);
random_user.put(&quot;roleName&quot;,roleName);
String rand_user=random_user.toJSONString();
log.info(rand_user);
log.info(rand_userId);
vars.put(&quot;rand_user&quot;,rand_user);
vars.put(&quot;rand_userId&quot;,rand_userId);

</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询导入后role_name" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT role_name from ta.auth_user_role where open_id=(select open_id from ta.auth_user where user_id=${rand_userId}) and company_id=${companyId} and project_id=${projectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">import_role_name</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询导入后data_power_id" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_power_id from ta.auth_user_data_power where open_id=(select open_id from ta.auth_user where user_id=${rand_userId}) and  project_id=${projectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">import_data_power_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言影响行数" enabled="true">
                <stringProp name="TestPlan.comments">字符串不相等通用</stringProp>
                <stringProp name="BeanShellAssertion.query">int count=Integer.parseInt(bsh.args[0]);

if(count!=1){
	Failure=true;
	FailureMessage=&quot;count:&quot;+count+&quot; 不等于1&quot;;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${import_role_name_#}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言role_name" enabled="true">
                <stringProp name="TestPlan.comments">字符串不相等通用</stringProp>
                <stringProp name="BeanShellAssertion.query">String str1=bsh.args[0];
String str2=bsh.args[1];

if(!str1.equals(str2)){
	Failure=true;
	FailureMessage=str1 + &quot; 不等于 &quot; + str2;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${random_roleName} ${import_role_name_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言data_power_id" enabled="false">
                <stringProp name="BeanShellAssertion.query">String arg1=bsh.args[0];
String arg2=bsh.args[1];
String arg3=bsh.args[2];

log.info(&quot;arg1： &quot;+arg1);
log.info(&quot;arg2：&quot;+arg2);
log.info(&quot;arg3：&quot;+arg3);
if(&quot;0&quot;.equals(arg3)){
	if(!&quot;-1&quot;.equals(arg1))
	{
		Failure=true;
		FailureMessage=&quot;传参不等于-1，但是sql没有查到&quot;;
	}

}
else if(!arg1.equals(arg2)){
		Failure=true;
		FailureMessage=str1 + &quot; 不等于 &quot; + str2;
		}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${random_dataPowerId} ${edit_data_power_id_1} ${edit_data_power_id_#}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="从项目中删除以上导入用户" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="targetUserId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${rand_userId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">targetUserId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/deletmember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息导入-已有成员" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/importmember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">返回 user_list  authRoles，authDataPowers</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言userlist至少存在一个人" enabled="true">
                <stringProp name="JSON_PATH">$.data.userlist[0].userId</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意userlist -for保存" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">random_user</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userlist[*]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意role_name-For保存" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">random_roleName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.authRoles[*].role_name</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意dataPowerId -for保存" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">random_dataPowerId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.authDataPowers[*].dataPowerId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取所有userId -for保存" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">all_userId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userlist[*].userId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息导入-已有成员保存-多个-todo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="qp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userRoles&quot;:${all_user}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">qp</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/savemember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 入参处理" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Random;

Random random=new Random();

//上接口返回：{&quot;data&quot;:{&quot;columns&quot;:[{&quot;needFill&quot;:false,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_id&quot;,&quot;selectType&quot;:&quot;string&quot;}},
//{&quot;needFill&quot;:true,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_name&quot;}}]},&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;success&quot;}
String resp=prev.getResponseDataAsString();
//返回的数据提取data中部分
JSONObject data=JSONObject.parseObject(resp).getJSONObject(&quot;data&quot;);
JSONArray all_user=data.getJSONArray(&quot;userlist&quot;);
JSONArray authRoles=data.getJSONArray(&quot;authRoles&quot;);
JSONArray authDataPowers=data.getJSONArray(&quot;authDataPowers&quot;);
int user_count=all_user.size();
String sql=&quot; (&quot;;
//log.info(sql);
for(int i=0;i&lt;user_count;i++){
	JSONObject user= all_user.getJSONObject(i);
	int userId=user.getInteger(&quot;userId&quot;);
	log.info(&quot;ss&quot;+userId);
	if(i&lt;user_count-1){
		sql=sql+userId+&quot;,&quot;;
	}
	else{
		sql=sql+userId+&quot;)&quot;;
		}
	int rand_role_index=random.nextInt(authRoles.size());
	String roleName=authRoles.getJSONObject(rand_role_index).getString(&quot;role_name&quot;);
	
	int rand_power_index=random.nextInt(authDataPowers.size());
	int dataPowerId=authDataPowers.getJSONObject(rand_power_index).getInteger(&quot;dataPowerId&quot;);
	user.put(&quot;dataPowerId&quot;,dataPowerId);
	user.put(&quot;roleName&quot;,roleName);

	}

//&quot;dataPowerId&quot;:60,&quot;roleName&quot;:&quot;member_1280053513846419456&quot;}]}

String users=all_user.toJSONString();
log.info(users);
log.info(sql);
vars.put(&quot;all_user&quot;,users);
vars.put(&quot;in_sql&quot;,sql);
//property.put(&quot;selectType&quot;,selectType);
////将两个json合并
//JSONObject uploadParamObj=JSONObject.parseObject(uploadParam);
//JSONObject createParamObj=new JSONObject();
//createParamObj.putAll(data);
//createParamObj.putAll(uploadParamObj);
////合并后json object转成string
//String createParam=createParamObj.toJSONString();
//vars.put(&quot;createParam_user&quot;,createParam);
//log.info(resp);
//log.info(uploadParam);
//log.info(&quot;respObj:&quot;+respObj)

</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 后置处理程序" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT role_name,login_name from ta.auth_user_role where open_id=(${openId_sql}) and company_id=${companyId} and project_id=${projectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">role_name,login_name</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询导入后data_power_id" enabled="false">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_power_id from ta.auth_user_data_power where open_id=(${openId_sql}) and  project_id=${projectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">import_data_power_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言new_user_id_#" enabled="false">
                <stringProp name="BeanShellAssertion.query">int count=Integer.parseInt(vars.get(&quot;new_user_id_#&quot;));
if(count!=1){
	Failure=false;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC 删除导入用户" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update ta.auth_user_role set status=0 where open_id in (select open_id from ta.auth_user where user_id in ${in_sql})  and project_id=${projectId};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">count</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC 删除用户对应的data_power_id" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from ta.auth_user_data_power where open_id in (select open_id from ta.auth_user where user_id in ${in_sql}) and project_id=${projectId};
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">count</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${all_userId_matchNr}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${all_userId_matchNr}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">i</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="从项目中删除以上导入用户" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="projectId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${projectId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">projectId</stringProp>
                    </elementProp>
                    <elementProp name="targetUserId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${__V(all_userId_${i})}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">targetUserId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/deletmember</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                  <stringProp name="JSON_PATH">$.return_code</stringProp>
                  <stringProp name="EXPECTED_VALUE">0</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="整个项目导入（只包含项目成员信息和角色信息）" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/importProjectMember?importProjectId=${importProjectId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="JDBC 前置查询目标项目下的openid" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select open_id from ta.auth_user_role where role_name not in(&apos;root&apos;,&apos;tdroot&apos;) and project_id=${importProjectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">importP_open_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPreProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言importMemberNum" enabled="true">
                <stringProp name="JSON_PATH">$.data.importMemberNum</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 后置查询当前项目下open_id" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select open_id from ta.auth_user_role where role_name not in(&apos;root&apos;,&apos;tdroot&apos;) and project_id=${projectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">cur_open_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言全部用户导入当前项目" enabled="true">
                <stringProp name="BeanShellAssertion.query">import java.util.Arrays;

int cur_count=Integer.parseInt(vars.get(&quot;cur_open_id_#&quot;));
String[] cur_open_id=new String[cur_count];
for(int i=1;i&lt;=cur_count;i++){
	cur_open_id[i-1]=vars.get(&quot;cur_open_id_&quot;+i);
}
Arrays.sort(cur_open_id);
log.info(&quot;cur_open_id&quot;+cur_open_id);

int count=Integer.parseInt(vars.get(&quot;importP_open_id_#&quot;));
String sql_in_ipenid=&quot;(&quot;;
for (int i=1;i&lt;=count;i++){
	String importP_open_id=vars.get(&quot;importP_open_id_&quot;+i);
	if (i==count){
		sql_in_ipenid += &quot;&apos;&quot;+importP_open_id+&quot;&apos;)&quot;;
		}
	else{
		sql_in_ipenid += &quot;&apos;&quot;+importP_open_id+&quot;&apos;,&quot;;
		}	
	log.info(&quot;importP_open_id&quot;+importP_open_id);
	int index=Arrays.binarySearch(cur_open_id,importP_open_id);
	if(index&lt;0){
		Failure=false;
		FailureMessage=&quot;存在openid未导入进当前项目&quot;;
		break;
	}
}
vars.put(&quot;sql_in_ipenid&quot;,sql_in_ipenid);

</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC 删除导入用户" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update ta.auth_user_role set status=0  where open_id in ${sql_in_ipenid}  and project_id=${projectId};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">count</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC 删除用户对应的data_power_id" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from ta.auth_user_data_power where open_id in (select open_id from ta.auth_user_role where role_name not in(&apos;root&apos;,&apos;tdroot&apos;) and project_id=${importProjectId}) and project_id=${projectId};
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">count</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="系统成员信息列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/listmember?_t=1594088748672&amp;companyId=${companyId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询项目成员" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select DISTINCT open_id from ta.auth_user_role where company_id=${companyId} and role_name!=&apos;tdroot&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">open_ids</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言返回的openId数组正确" enabled="false">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;

int count=Integer.parseInt(vars.get(&quot;open_ids_#&quot;));
String[] open_ids = new String[count];
for (int i=1;i&lt;=count;i++){
	log.info(vars.get(&quot;open_ids_&quot;+i));
	open_ids[i-1]=vars.get(&quot;open_ids_&quot;+i);
	}
log.info(&quot;aa&quot;+open_ids);	
Arrays.sort(open_ids);

JSONObject resp=JSONObject.parseObject(sampler.getResponseDataAsString());
JSONArray memberList=resp.getJSONArray(&quot;data&quot;);
int len=memberList.size();
String[] openIds=new String[len];
for(int i=0;i&lt;len;i++){
	openIds[i]=memberList.getJSONObject(i).getString(&quot;openId&quot;);
	log.info(&quot;bb&quot;+openIds[i]);
	}
//log.info(&quot;cc&quot;+openIds);
Arrays.sort(openIds);

if(!Arrays.equals(open_ids,openIds)){
	Failure=true;
	}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="加载项目" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/loadproject</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言存在projectId" enabled="true">
                <stringProp name="JSON_PATH">$.data[*].projectId</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息导入-创建新成员-admin" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="loginNames" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">root-autotest</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">loginNames</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/importmember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">返回 new_userStatus, authRoles，authDataPowers</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言loginName" enabled="false">
                <stringProp name="JSON_PATH">$.data.new_userStatus[0].loginName</stringProp>
                <stringProp name="EXPECTED_VALUE">${newLoginName}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言status=5" enabled="true">
                <stringProp name="JSON_PATH">$.data.new_userStatus[0].status</stringProp>
                <stringProp name="EXPECTED_VALUE">5</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言password--todo" enabled="false">
                <stringProp name="JSON_PATH">$.data.new_userStatus[0].password</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意dataPowerId -for编辑" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">random1_dataPowerId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.authDataPowers[*].dataPowerId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意role_name-For编辑" enabled="false">
                <stringProp name="TestPlan.comments">任意role_name--第一个root不允许编辑</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">random1_roleName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.authRoles[1:].role_name</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取loginName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">new_loginName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.new_userStatus[0].loginName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取password" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">new_password</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.new_userStatus[0].password</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员信息导入-新成员保存-admin" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="projectId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${projectId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">projectId</stringProp>
                  </elementProp>
                  <elementProp name="qp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userRoles&quot;:[${new_user}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">qp</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/savemember</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头-x-www-form-urlencoded" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 入参处理" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Random;

Random random=new Random();
//上接口返回：{&quot;data&quot;:{&quot;columns&quot;:[{&quot;needFill&quot;:false,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_id&quot;,&quot;selectType&quot;:&quot;string&quot;}},
//{&quot;needFill&quot;:true,&quot;property&quot;:{&quot;columnName&quot;:&quot;level_name&quot;}}]},&quot;return_code&quot;:0,&quot;return_message&quot;:&quot;success&quot;}
String resp=prev.getResponseDataAsString();
//返回的数据提取data中部分
JSONObject data=JSONObject.parseObject(resp).getJSONObject(&quot;data&quot;);

JSONObject new_userStatus=data.getJSONArray(&quot;new_userStatus&quot;).getJSONObject(0);
JSONArray authRoles=data.getJSONArray(&quot;authRoles&quot;);
//去掉root角色，避免编辑root不成功导致 编辑接口报错
//if(&quot;root&quot;.equals(authRoles.getJSONObject(0).getString(&quot;role_name&quot;))){
//	authRoles.remove(0);
//	}
//int rand_role_index=random.nextInt(authRoles.size());
//String roleName=authRoles.getJSONObject(rand_role_index).getString(&quot;role_name&quot;);
//log.info(&quot;a&quot;+roleName);
JSONArray authDataPowers=data.getJSONArray(&quot;authDataPowers&quot;);
int rand_power_index=random.nextInt(authDataPowers.size());
int dataPowerId=authDataPowers.getJSONObject(rand_power_index).getInteger(&quot;dataPowerId&quot;);
log.info(&quot;b&quot;+dataPowerId);

new_userStatus.put(&quot;dataPowerId&quot;,dataPowerId);
//指定root角色
new_userStatus.put(&quot;roleName&quot;,&quot;admin&quot;);
String new_user=new_userStatus.toJSONString();
log.info(new_user);
vars.put(&quot;new_user&quot;,new_user);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询新增成员" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select a.user_id,a.open_id from ta.auth_user a INNER JOIN ta.auth_user_role b on a.open_id=b.open_id and b.company_id=${companyId} and b.project_id=${projectId} 
where a.login_name=&quot;root-autotest&quot; and a.`status` in (1,2);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">new_user_id,new_open_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言new_user_id_#" enabled="true">
                <stringProp name="BeanShellAssertion.query">int count=Integer.parseInt(vars.get(&quot;new_user_id_#&quot;));
if(count!=1){
	Failure=false;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="从公司删除用户" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/delete-user-from-company?companyId=${companyId}&amp;targetUserId=${new_user_id_1}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="权限管理-角色管理" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="角色列表-项目" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/listAllRole?_t=1593689524273&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询all_role_name" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">(select role_name from ta.auth_role where status=1 and level&lt;6 and level&gt;1) 
union all  
select role_name from ta.auth_role_n where company_id=${companyId} and ( project_id=${projectId} or project_id=-1) and status=1</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">all_role_name</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取all_roleName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">all_roleName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].roleName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">
int sql_count=Integer.parseInt(vars.get(&quot;all_role_name_#&quot;));
int count=Integer.parseInt(vars.get(&quot;all_roleName_matchNr&quot;));
if(sql_count!=count){
	Failure=true;
	}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取角色名功能权限列表-root" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/getRoleFuncListByRoleName?_t=1593684242318&amp;roleName=root</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">roleName=tdroot root  admin  analyst</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言hasPower" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].hasPower</stringProp>
                <stringProp name="EXPECTED_VALUE">[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言powerRoot" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].powerRoot</stringProp>
                <stringProp name="EXPECTED_VALUE">[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,4]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言powerAdmin" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].powerAdmin</stringProp>
                <stringProp name="EXPECTED_VALUE">[4,4,4,4,1,1,1,1,1,1,1,1,4,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,4]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言powerMember" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].powerMember</stringProp>
                <stringProp name="EXPECTED_VALUE">[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,1,2,3,4,3,3,4]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言powerAnalyst" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].powerAnalyst</stringProp>
                <stringProp name="EXPECTED_VALUE">[4,4,4,4,4,4,4,4,1,3,2,3,4,1,3,4,1,2,2,3,3,3,4,4,4,2,2,2,2,3,3,1,2,2,4,2,2,4]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取角色名功能权限列表-admin" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/getRoleFuncListByRoleName?_t=1593684242318&amp;roleName=admin</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">roleName=tdroot root  admin  analyst</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言hasPower" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].hasPower</stringProp>
                <stringProp name="EXPECTED_VALUE">[0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言powerAdmin" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].powerAdmin</stringProp>
                <stringProp name="EXPECTED_VALUE">[4,4,4,4,1,1,1,1,1,1,1,1,4,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,4]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取角色名功能权限列表-member" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/getRoleFuncListByRoleName?_t=1593684242318&amp;roleName=${prj_new_baseRole}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">roleName=tdroot root  admin  analyst</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取roleFuncList" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">roleFuncList</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询角色权限" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select function_id ,1 as `option` from ta.auth_base_role_function where role_name=&quot;${prj_new_baseRole}&quot;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">function_id,option</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言hasPower匹配" enabled="true">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;


int count=Integer.parseInt(vars.get(&quot;function_id_#&quot;));
String function_id=vars.get(&quot;function_id_1&quot;);
JSONObject func= new JSONObject();
for(int i=1;i&lt;=count;i++){
	func.put(vars.get(&quot;function_id_&quot;+i),vars.get(&quot;option_&quot;+i));
	}

log.info(func.toJSONString());

String resp=prev.getResponseDataAsString();
log.info(resp);
JSONArray data=JSONObject.parseObject(resp).getJSONArray(&quot;data&quot;);
int size=data.size();
log.info(&quot;size&quot;+size);
for(int i=0;i&lt;size;i++){
	String function_id=data.getJSONObject(i).getString(&quot;functionId&quot;);
	String hasPower=data.getJSONObject(i).getString(&quot;hasPower&quot;);
	log.info(function_id+&quot;:&quot;+hasPower);
	hasKey=func.containsKey(function_id);
	log.info(&quot;haskey:&quot;+hasKey);
	if(hasKey){
		log.info(&quot;function_id &quot;+func.getString(function_id));
		if(!hasPower.equals(func.getString(function_id))) {
			Failure=true;
			FailureMessage=function_id+&quot;对应的hasPower不匹配&quot;;
			break;
			}
	}
	else if(!&quot;0&quot;.equals(hasPower)){
			Failure=true;
			FailureMessage=function_id+&quot;对应的hasPower不等于0&quot;;
			break;
		}
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言powerMember" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].powerMember</stringProp>
                <stringProp name="EXPECTED_VALUE">[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,1,2,3,4,3,3,4]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存项目角色-自定义member" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;roleDesc&quot;: &quot;${prj_new_roleDesc}&quot;,&#xd;
	&quot;baseRoleName&quot;: &quot;${prj_new_baseRole}&quot;,&#xd;
	&quot;roleFuncList&quot;: ${roleFuncList}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/saveProjectRole?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;

//设置权限： {&quot;34&quot;:&quot;1&quot;,&quot;35&quot;:&quot;0&quot;,&quot;37&quot;:&quot;1&quot;}
JSONObject func= new JSONObject();
func.put(&quot;34&quot;,1);
func.put(&quot;35&quot;,0);
func.put(&quot;37&quot;,1);
func.put(&quot;61&quot;,1);
log.info(func.toJSONString());
String resp=prev.getResponseDataAsString();
log.info(resp);
JSONArray data=JSONObject.parseObject(resp).getJSONArray(&quot;data&quot;);
int size=data.size();
log.info(&quot;size&quot;+size);
for(int i=0;i&lt;size;i++){
	String function_id=data.getJSONObject(i).getString(&quot;functionId&quot;);
//	String hasPower=data.getJSONObject(i).getString(&quot;hasPower&quot;);
	log.info(function_id);
	hasKey=func.containsKey(function_id);

	log.info(&quot;haskey:&quot;+hasKey);
	if(hasKey){
		int option=func.getInteger(function_id);
		log.info(&quot;option:&quot;+option);
		data.getJSONObject(i).put(&quot;hasPower&quot;,option);
		
		}
	}
	String roleFuncList=data.toJSONString();
	vars.put(&quot;roleFuncList&quot;,roleFuncList);
	
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询新增角色role_name" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select role_name from ta.auth_role_n where role_desc=&quot;${prj_new_roleDesc}&quot; and company_id=${companyId} and project_id=${projectId} and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">prj_new_role_name</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询角色权限" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select function_id ,1 as `option` from ta.auth_base_role_function where role_name=&quot;${prj_new_baseRole}&quot;	union ALL select function_id,`option` from ta.auth_role_function where role_name=&apos;${prj_new_role_name_1}&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">function_id,option</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言hasPower匹配" enabled="true">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;


int count=Integer.parseInt(vars.get(&quot;function_id_#&quot;));
String function_id=vars.get(&quot;function_id_1&quot;);
JSONObject func= new JSONObject();
for(int i=1;i&lt;=count;i++){
	func.put(vars.get(&quot;function_id_&quot;+i),vars.get(&quot;option_&quot;+i));
	}
String sql_func=func.toJSONString();
log.info(&quot;sql_func &quot;+sql_func);

//String resp=prev.getResponseDataAsString();
//log.info(resp);
//JSONArray data=JSONObject.parseObject(resp).getJSONArray(&quot;data&quot;);

JSONObject req= new JSONObject();
req.put(&quot;34&quot;,&quot;1&quot;);
req.put(&quot;35&quot;,&quot;0&quot;);
req.put(&quot;37&quot;,&quot;1&quot;);
req.put(&quot;61&quot;,&quot;1&quot;);
String req_func=req.toJSONString();
log.info(&quot;req_func &quot;+req_func);
if(!sql_func.equals(req_func)){
	Failure=true;
	}

//
//int size=req_func.size();
//log.info(&quot;size&quot;+size);
//for(int i=0;i&lt;size;i++){
//	String function_id=req_func.getJSONObject(i).getString(&quot;functionId&quot;);
//	String hasPower=req_func.getJSONObject(i).getString(&quot;hasPower&quot;);
//	log.info(function_id+&quot;:&quot;+hasPower);
//	hasKey=func.containsKey(function_id);
//	log.info(&quot;haskey:&quot;+hasKey);
//	if(hasKey){
//		log.info(&quot;function_id &quot;+func.getString(function_id));
//		if(!hasPower.equals(func.getString(function_id))) {
//			Failure=true;
//			FailureMessage=function_id+&quot;对应的hasPower不匹配&quot;;
//			break;
//			}
//	}
//	else if(!&quot;0&quot;.equals(hasPower)){
//			Failure=true;
//			FailureMessage=function_id+&quot;对应的hasPowerb不等于0&quot;;
//			break;
//		}
//}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取角色名功能权限列表-自定义member" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/getRoleFuncListByRoleName?_t=1593684242318&amp;roleName=${prj_new_role_name_1}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">roleName=tdroot root  admin  analyst</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取roleFuncList" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">roleFuncList</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言hasPower" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].hasPower</stringProp>
                <stringProp name="EXPECTED_VALUE">[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑项目角色" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;roleDesc&quot;: &quot;${prj_edit_roleDesc}&quot;,&#xd;
	&quot;baseRoleName&quot;: &quot;${prj_new_baseRole}&quot;,&#xd;
	&quot;roleName&quot;: &quot;${prj_new_role_name_1}&quot;,&#xd;
	&quot;roleFuncList&quot;: ${roleFuncList}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/saveProjectRole?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;

//设置权限： {&quot;34&quot;:&quot;1&quot;,&quot;35&quot;:&quot;0&quot;,&quot;37&quot;:&quot;1&quot;}
JSONObject func= new JSONObject();
func.put(&quot;34&quot;,1);
func.put(&quot;35&quot;,1);
func.put(&quot;28&quot;,1);
func.put(&quot;29&quot;,1);
func.put(&quot;30&quot;,1);
func.put(&quot;31&quot;,1);
func.put(&quot;33&quot;,1);
func.put(&quot;37&quot;,1);
func.put(&quot;40&quot;,1);
func.put(&quot;49&quot;,1);
func.put(&quot;51&quot;,1);
func.put(&quot;61&quot;,1);
log.info(func.toJSONString());
String resp=prev.getResponseDataAsString();
log.info(resp);
JSONArray data=JSONObject.parseObject(resp).getJSONArray(&quot;data&quot;);
int size=data.size();
log.info(&quot;size&quot;+size);
for(int i=0;i&lt;size;i++){
	String function_id=data.getJSONObject(i).getString(&quot;functionId&quot;);
//	String hasPower=data.getJSONObject(i).getString(&quot;hasPower&quot;);
	log.info(function_id);
	hasKey=func.containsKey(function_id);

	log.info(&quot;haskey:&quot;+hasKey);
	if(hasKey){
		int option=func.getInteger(function_id);
		log.info(&quot;option:&quot;+option);
		data.getJSONObject(i).put(&quot;hasPower&quot;,option);
		
		}
	}
	String roleFuncList=data.toJSONString();
	vars.put(&quot;roleFuncList&quot;,roleFuncList);
	
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询角色权限" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select function_id ,1 as `option` from ta.auth_base_role_function where role_name=&quot;${prj_new_baseRole}&quot;	union ALL select function_id,`option` from ta.auth_role_function where role_name=&apos;${prj_new_role_name_1}&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">function_id,option</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言hasPower匹配" enabled="true">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;


int count=Integer.parseInt(vars.get(&quot;function_id_#&quot;));
String function_id=vars.get(&quot;function_id_1&quot;);
JSONObject func= new JSONObject();
for(int i=1;i&lt;=count;i++){
	func.put(vars.get(&quot;function_id_&quot;+i),vars.get(&quot;option_&quot;+i));
	}
String sql_func=func.toJSONString();
log.info(&quot;sql_func &quot;+sql_func);

//String resp=prev.getResponseDataAsString();
//log.info(resp);
//JSONArray data=JSONObject.parseObject(resp).getJSONArray(&quot;data&quot;);

JSONObject req= new JSONObject();
req.put(&quot;34&quot;,&quot;1&quot;);
req.put(&quot;35&quot;,&quot;1&quot;);
req.put(&quot;28&quot;,&quot;1&quot;);
req.put(&quot;29&quot;,&quot;1&quot;);
req.put(&quot;30&quot;,&quot;1&quot;);
req.put(&quot;31&quot;,&quot;1&quot;);
req.put(&quot;33&quot;,&quot;1&quot;);
req.put(&quot;37&quot;,&quot;1&quot;);
req.put(&quot;40&quot;,&quot;1&quot;);
req.put(&quot;49&quot;,&quot;1&quot;);
req.put(&quot;51&quot;,&quot;1&quot;);
req.put(&quot;61&quot;,&quot;1&quot;);
String req_func=req.toJSONString();
log.info(&quot;req_func &quot;+req_func);
if(!sql_func.equals(req_func)){
	Failure=true;
	}

//
//int size=req_func.size();
//log.info(&quot;size&quot;+size);
//for(int i=0;i&lt;size;i++){
//	String function_id=req_func.getJSONObject(i).getString(&quot;functionId&quot;);
//	String hasPower=req_func.getJSONObject(i).getString(&quot;hasPower&quot;);
//	log.info(function_id+&quot;:&quot;+hasPower);
//	hasKey=func.containsKey(function_id);
//	log.info(&quot;haskey:&quot;+hasKey);
//	if(hasKey){
//		log.info(&quot;function_id &quot;+func.getString(function_id));
//		if(!hasPower.equals(func.getString(function_id))) {
//			Failure=true;
//			FailureMessage=function_id+&quot;对应的hasPower不匹配&quot;;
//			break;
//			}
//	}
//	else if(!&quot;0&quot;.equals(hasPower)){
//			Failure=true;
//			FailureMessage=function_id+&quot;对应的hasPowerb不等于0&quot;;
//			break;
//		}
//}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取角色名功能权限列表-自定义member" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/getRoleFuncListByRoleName?_t=1593684242318&amp;roleName=${prj_new_role_name_1}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">roleName=tdroot root  admin  analyst</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取roleFuncList" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">roleFuncList</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言hasPower" enabled="true">
                <stringProp name="JSON_PATH">$.data[*].hasPower</stringProp>
                <stringProp name="EXPECTED_VALUE">[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取角色名详情-自定义member" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/getRoleByRoleName?_t=1593684242318&amp;roleName=${prj_new_role_name_1}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">roleName=tdroot root  admin  analyst</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言companyId" enabled="true">
                <stringProp name="JSON_PATH">$.data.companyId</stringProp>
                <stringProp name="EXPECTED_VALUE">${companyId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言projectId" enabled="true">
                <stringProp name="JSON_PATH">$.data.projectId</stringProp>
                <stringProp name="EXPECTED_VALUE">${projectId}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言roleName" enabled="true">
                <stringProp name="JSON_PATH">$.data.roleName</stringProp>
                <stringProp name="EXPECTED_VALUE">${prj_new_role_name_1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除角色-项目角色" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/deleteRole?_t=1594178798747&amp;roleName=${prj_new_role_name_1}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="角色列表-系统" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/listAllRole?_t=1593689524273&amp;companyId=${companyId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询all_role_name" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">(select role_name from ta.auth_role where status=1 and level&lt;6 and level&gt;1) 
union all  
select role_name from ta.auth_role_n where company_id=${companyId} and  project_id=-1 and status=1</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">all_role_name</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取all_roleName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">all_roleName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].roleName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">
int sql_count=Integer.parseInt(vars.get(&quot;all_role_name_#&quot;));
int count=Integer.parseInt(vars.get(&quot;all_roleName_matchNr&quot;));
if(sql_count!=count){
	Failure=true;
	}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取角色名功能权限列表-analyst" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/getRoleFuncListByRoleName?_t=1593684242318&amp;roleName=${cmp_new_baseRole}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">roleName=tdroot root  admin  analyst</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">roleFuncList</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言hasPower" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].hasPower</stringProp>
                <stringProp name="EXPECTED_VALUE">[0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,0,1,1,0]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言powerAnalyst" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].powerAnalyst</stringProp>
                <stringProp name="EXPECTED_VALUE">[4,4,4,4,4,4,4,4,1,3,2,3,4,1,3,4,1,2,2,3,3,3,4,4,4,2,2,2,2,3,3,1,2,2,4,2,2,4]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存系统角色-自定义analyst" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;roleDesc&quot;: &quot;${cmp_new_roleDesc}&quot;,&#xd;
	&quot;baseRoleName&quot;: &quot;${cmp_new_baseRole}&quot;,&#xd;
	&quot;roleFuncList&quot;: ${cmp_new_roleFuncList}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/saveSystemRole?companyId=${companyId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;

//设置权限： {&quot;34&quot;:&quot;1&quot;,&quot;35&quot;:&quot;0&quot;,&quot;37&quot;:&quot;1&quot;}
JSONObject func= new JSONObject();
func.put(&quot;14&quot;,1);
func.put(&quot;16&quot;,1);
func.put(&quot;19&quot;,1);
func.put(&quot;20&quot;,1);
func.put(&quot;21&quot;,1);
func.put(&quot;28&quot;,1);
func.put(&quot;29&quot;,1);
func.put(&quot;30&quot;,1);
func.put(&quot;31&quot;,1);
func.put(&quot;34&quot;,1);
func.put(&quot;35&quot;,1);
func.put(&quot;37&quot;,1);
func.put(&quot;40&quot;,1);
func.put(&quot;51&quot;,1);
func.put(&quot;53&quot;,1);
func.put(&quot;16&quot;,0);
func.put(&quot;56&quot;,1);
func.put(&quot;59&quot;,1);
func.put(&quot;61&quot;,1);
log.info(func.toJSONString());
String resp=prev.getResponseDataAsString();
log.info(resp);
JSONArray data=JSONObject.parseObject(resp).getJSONArray(&quot;data&quot;);
int size=data.size();
log.info(&quot;size&quot;+size);
for(int i=0;i&lt;size;i++){
	String function_id=data.getJSONObject(i).getString(&quot;functionId&quot;);
//	String hasPower=data.getJSONObject(i).getString(&quot;hasPower&quot;);
	log.info(function_id);
	hasKey=func.containsKey(function_id);

	log.info(&quot;haskey:&quot;+hasKey);
	if(hasKey){
		int option=func.getInteger(function_id);
		log.info(&quot;option:&quot;+option);
		data.getJSONObject(i).put(&quot;hasPower&quot;,option);
		
		}
	}
	String roleFuncList=data.toJSONString();
//	log.info(&quot;cmp_new_roleFuncList&quot;+roleFuncList);
	vars.put(&quot;cmp_new_roleFuncList&quot;,roleFuncList);
	
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询新增角色role_name" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select role_name from ta.auth_role_n where role_desc=&quot;${cmp_new_roleDesc}&quot; and company_id=${companyId} and project_id=-1 and status=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">cmp_new_role_name</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询角色权限" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select function_id ,1 as `option` from ta.auth_base_role_function where role_name=&quot;${cmp_new_baseRole}&quot;	union ALL select function_id,`option` from ta.auth_role_function where role_name=&apos;${cmp_new_role_name_1}&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">cmp_new_function_id,cmp_new_option</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言hasPower匹配" enabled="true">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;


int count=Integer.parseInt(vars.get(&quot;cmp_new_function_id_#&quot;));
String function_id=vars.get(&quot;cmp_new_function_id_1&quot;);
JSONObject func= new JSONObject();
for(int i=1;i&lt;=count;i++){
	func.put(vars.get(&quot;cmp_new_function_id_&quot;+i),vars.get(&quot;cmp_new_option_&quot;+i));
	}
String sql_func=func.toJSONString();
log.info(&quot;sql_func &quot;+sql_func);

//String resp=prev.getResponseDataAsString();
//log.info(resp);
//JSONArray data=JSONObject.parseObject(resp).getJSONArray(&quot;data&quot;);

JSONObject req= new JSONObject();
req.put(&quot;14&quot;,&quot;1&quot;);
req.put(&quot;16&quot;,&quot;1&quot;);
req.put(&quot;19&quot;,&quot;1&quot;);
req.put(&quot;20&quot;,&quot;1&quot;);
req.put(&quot;21&quot;,&quot;1&quot;);
req.put(&quot;28&quot;,&quot;1&quot;);
req.put(&quot;29&quot;,&quot;1&quot;);
req.put(&quot;30&quot;,&quot;1&quot;);
req.put(&quot;31&quot;,&quot;1&quot;);
req.put(&quot;34&quot;,&quot;1&quot;);
req.put(&quot;35&quot;,&quot;1&quot;);
req.put(&quot;37&quot;,&quot;1&quot;);
req.put(&quot;40&quot;,&quot;1&quot;);
req.put(&quot;51&quot;,&quot;1&quot;);
req.put(&quot;53&quot;,&quot;1&quot;);
req.put(&quot;16&quot;,&quot;0&quot;);
req.put(&quot;56&quot;,&quot;1&quot;);
req.put(&quot;59&quot;,&quot;1&quot;);
req.put(&quot;61&quot;,&quot;1&quot;);
String req_func=req.toJSONString();
log.info(&quot;req_func &quot;+req_func);
if(!sql_func.equals(req_func)){
	Failure=true;
	}

//
//int size=req_func.size();
//log.info(&quot;size&quot;+size);
//for(int i=0;i&lt;size;i++){
//	String function_id=req_func.getJSONObject(i).getString(&quot;functionId&quot;);
//	String hasPower=req_func.getJSONObject(i).getString(&quot;hasPower&quot;);
//	log.info(function_id+&quot;:&quot;+hasPower);
//	hasKey=func.containsKey(function_id);
//	log.info(&quot;haskey:&quot;+hasKey);
//	if(hasKey){
//		log.info(&quot;function_id &quot;+func.getString(function_id));
//		if(!hasPower.equals(func.getString(function_id))) {
//			Failure=true;
//			FailureMessage=function_id+&quot;对应的hasPower不匹配&quot;;
//			break;
//			}
//	}
//	else if(!&quot;0&quot;.equals(hasPower)){
//			Failure=true;
//			FailureMessage=function_id+&quot;对应的hasPowerb不等于0&quot;;
//			break;
//		}
//}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取角色名功能权限列表-自定义analyst" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/getRoleFuncListByRoleName?_t=1593684242318&amp;roleName=${cmp_new_role_name_1}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">roleName=tdroot root  admin  analyst</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取roleFuncList" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">roleFuncList</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言hasPower" enabled="false">
                <stringProp name="JSON_PATH">$.data[*].hasPower</stringProp>
                <stringProp name="EXPECTED_VALUE">[0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,1,1,1,0,1,1,0]</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑系统角色-自定义analyst" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;roleDesc&quot;: &quot;${cmp_edit_roleDesc}&quot;,&#xd;
	&quot;baseRoleName&quot;: &quot;${cmp_new_baseRole}&quot;,&#xd;
	&quot;roleName&quot;: &quot;${cmp_new_role_name_1}&quot;,&#xd;
	&quot;roleFuncList&quot;: ${cmp_edit_roleFuncList}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/saveSystemRole?companyId=${companyId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;

//设置权限： {&quot;34&quot;:&quot;1&quot;,&quot;35&quot;:&quot;0&quot;,&quot;37&quot;:&quot;1&quot;}
JSONObject func= new JSONObject();
func.put(&quot;14&quot;,1);
func.put(&quot;16&quot;,1);
func.put(&quot;19&quot;,1);
func.put(&quot;20&quot;,1);
func.put(&quot;21&quot;,1);
func.put(&quot;28&quot;,1);
func.put(&quot;29&quot;,1);
func.put(&quot;30&quot;,1);
func.put(&quot;31&quot;,1);
func.put(&quot;34&quot;,1);
func.put(&quot;35&quot;,1);
func.put(&quot;37&quot;,1);
func.put(&quot;40&quot;,1);
func.put(&quot;51&quot;,1);
func.put(&quot;53&quot;,1);
func.put(&quot;15&quot;,1);
func.put(&quot;17&quot;,1);
func.put(&quot;33&quot;,1);
func.put(&quot;49&quot;,1);
func.put(&quot;54&quot;,1);
func.put(&quot;56&quot;,1);
func.put(&quot;57&quot;,1);
func.put(&quot;58&quot;,1);
func.put(&quot;59&quot;,1);
func.put(&quot;61&quot;,1);
log.info(func.toJSONString());
String resp=prev.getResponseDataAsString();
log.info(resp);
JSONArray data=JSONObject.parseObject(resp).getJSONArray(&quot;data&quot;);
int size=data.size();
log.info(&quot;size&quot;+size);
for(int i=0;i&lt;size;i++){
	String function_id=data.getJSONObject(i).getString(&quot;functionId&quot;);
//	String hasPower=data.getJSONObject(i).getString(&quot;hasPower&quot;);
	log.info(function_id);
	hasKey=func.containsKey(function_id);

	log.info(&quot;haskey:&quot;+hasKey);
	if(hasKey){
		int option=func.getInteger(function_id);
		log.info(&quot;option:&quot;+option);
		data.getJSONObject(i).put(&quot;hasPower&quot;,option);
		
		}
	}
	String roleFuncList=data.toJSONString();
//	log.info(&quot;cmp_edit_roleFuncList&quot;+roleFuncList);
	vars.put(&quot;cmp_edit_roleFuncList&quot;,roleFuncList);
	
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 查询角色权限" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select function_id ,1 as `option` from ta.auth_base_role_function where role_name=&quot;${cmp_new_baseRole}&quot;	union ALL select function_id,`option` from ta.auth_role_function where role_name=&apos;${cmp_new_role_name_1}&apos;;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">cmp_edit_function_id,cmp_edit_option</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言hasPower匹配" enabled="true">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;


int count=Integer.parseInt(vars.get(&quot;cmp_edit_function_id_#&quot;));
String function_id=vars.get(&quot;cmp_edit_function_id_1&quot;);
JSONObject func= new JSONObject();
for(int i=1;i&lt;=count;i++){
	func.put(vars.get(&quot;cmp_edit_function_id_&quot;+i),vars.get(&quot;cmp_edit_option_&quot;+i));
	}
String sql_func=func.toJSONString();
log.info(&quot;sql_func &quot;+sql_func);

//String resp=prev.getResponseDataAsString();
//log.info(resp);
//JSONArray data=JSONObject.parseObject(resp).getJSONArray(&quot;data&quot;);

JSONObject req= new JSONObject();
req.put(&quot;14&quot;,&quot;1&quot;);
req.put(&quot;16&quot;,&quot;1&quot;);
req.put(&quot;19&quot;,&quot;1&quot;);
req.put(&quot;20&quot;,&quot;1&quot;);
req.put(&quot;21&quot;,&quot;1&quot;);
req.put(&quot;28&quot;,&quot;1&quot;);
req.put(&quot;29&quot;,&quot;1&quot;);
req.put(&quot;30&quot;,&quot;1&quot;);
req.put(&quot;31&quot;,&quot;1&quot;);
req.put(&quot;34&quot;,&quot;1&quot;);
req.put(&quot;35&quot;,&quot;1&quot;);
req.put(&quot;37&quot;,&quot;1&quot;);
req.put(&quot;40&quot;,&quot;1&quot;);
req.put(&quot;51&quot;,&quot;1&quot;);
req.put(&quot;53&quot;,&quot;1&quot;);
req.put(&quot;15&quot;,&quot;1&quot;);
req.put(&quot;17&quot;,&quot;1&quot;);
req.put(&quot;33&quot;,&quot;1&quot;);
req.put(&quot;49&quot;,&quot;1&quot;);
req.put(&quot;54&quot;,&quot;1&quot;);
req.put(&quot;56&quot;,&quot;1&quot;);
req.put(&quot;57&quot;,&quot;1&quot;);
req.put(&quot;58&quot;,&quot;1&quot;);
req.put(&quot;59&quot;,&quot;1&quot;);
req.put(&quot;61&quot;,&quot;1&quot;);
String req_func=req.toJSONString();
log.info(&quot;req_func &quot;+req_func);
if(!sql_func.equals(req_func)){
	Failure=true;
	}

//
//int size=req_func.size();
//log.info(&quot;size&quot;+size);
//for(int i=0;i&lt;size;i++){
//	String function_id=req_func.getJSONObject(i).getString(&quot;functionId&quot;);
//	String hasPower=req_func.getJSONObject(i).getString(&quot;hasPower&quot;);
//	log.info(function_id+&quot;:&quot;+hasPower);
//	hasKey=func.containsKey(function_id);
//	log.info(&quot;haskey:&quot;+hasKey);
//	if(hasKey){
//		log.info(&quot;function_id &quot;+func.getString(function_id));
//		if(!hasPower.equals(func.getString(function_id))) {
//			Failure=true;
//			FailureMessage=function_id+&quot;对应的hasPower不匹配&quot;;
//			break;
//			}
//	}
//	else if(!&quot;0&quot;.equals(hasPower)){
//			Failure=true;
//			FailureMessage=function_id+&quot;对应的hasPowerb不等于0&quot;;
//			break;
//		}
//}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除角色-系统角色" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/deleteRole?_t=1594178798747&amp;roleName=${cmp_new_role_name_1}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取角色名功能权限列表-不存在" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/role/getRoleFuncListByRoleName?_t=1593684242318&amp;roleName=${cmp_new_role_name_1}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">roleName=tdroot root  admin  analyst</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=-1008" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">-1008</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="权限管理-数据权限管理" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取数据权限列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/data/getDataPowerList?_t=1593689524277&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取默认事件分组列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/data/getDefaultEventGroups?_t=1593748139458&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意一个事件" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">rand_eventName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].events[*].eventName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存数据权限" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;dataPowerName&quot;: &quot;${new_dataPowerName}&quot;,&#xd;
	&quot;default_join&quot;: false,&#xd;
	&quot;eventGroups&quot;: [{&#xd;
		&quot;eventGroupName&quot;: &quot;默认分组&quot;,&#xd;
		&quot;events&quot;: [{&#xd;
			&quot;eventName&quot;: &quot;${rand_eventName}&quot;,&#xd;
			&quot;isDisPlay&quot;: 1&#xd;
		}]&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/data/saveDataPower?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 后置处理程序" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select data_power_id from ta.auth_data_power  where data_power_name=&quot;${new_dataPowerName}&quot; and project_id=${projectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">new_data_power_id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言count" enabled="true">
                <stringProp name="BeanShellAssertion.query">int count = Integer.parseInt(vars.get(&quot;new_data_power_id_#&quot;));
if(count&lt;=0){
	Failure=true;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取数据权限详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/data/getDataPowerDetail?_t=1594275071132&amp;dataPowerId=${new_data_power_id_1}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑数据权限" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;dataPowerName&quot;: &quot;${edit_dataPowerName}&quot;,&#xd;
	&quot;default_join&quot;: true,&#xd;
	&quot;eventGroups&quot;: [{&#xd;
		&quot;eventGroupName&quot;: &quot;默认分组&quot;,&#xd;
		&quot;events&quot;:${edit_event}&#xd;
	}],&#xd;
	&quot;dataPowerId&quot;: ${new_data_power_id_1}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/data/saveDataPower?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 后置处理程序" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select config from ta.auth_data_power  where data_power_name=&quot;${edit_dataPowerName}&quot; and project_id=${projectId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">edit_config</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;

//设置权限： {&quot;34&quot;:&quot;1&quot;,&quot;35&quot;:&quot;0&quot;,&quot;37&quot;:&quot;1&quot;}

String resp=prev.getResponseDataAsString();
log.info(resp);
JSONArray event=JSONObject.parseObject(resp).getJSONObject(&quot;data&quot;).getJSONArray(&quot;eventGroups&quot;).getJSONObject(0).getJSONArray(&quot;events&quot;);
int size=event.size();
log.info(&quot;size&quot;+size);
int edit_count=0;
for(int i=0;i&lt;size;i++){
	if (i%2==0){
		event.getJSONObject(i).put(&quot;isDisPlay&quot;,1);
		edit_count++;
		}
	else{
		event.getJSONObject(i).put(&quot;isDisPlay&quot;,0);
		}
}
log.info(&quot;edit_event &quot;+event.toJSONString());
log.info(&quot;edit_count &quot;+edit_count);
vars.put(&quot;edit_event&quot;,event.toJSONString());
vars.put(&quot;edit_count&quot;,Integer.toString(edit_count));
	
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言事件个数正确" enabled="true">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;

int count=Integer.parseInt(vars.get(&quot;edit_count&quot;));
String edit_config=vars.get(&quot;edit_config_1&quot;);
log.info(&quot;edit_config&quot;+edit_config);
JSONObject event=JSONObject.parseObject(edit_config);
int size=event.getJSONArray(&quot;eventNameSet&quot;).size();
if(count!=size){
	failure=true;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除用户权限" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/data/deleteDataPower?_t=1594275185949&amp;dataPowerId=${new_data_power_id_1}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取数据权限详情-不存在" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/data/getDataPowerDetail?_t=1594275071132&amp;dataPowerId=${new_data_power_id_1}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=-1023" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">-1023</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="权限管理-用户分组" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="项目成员搜索" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/manage/membersearch?_t=1593741787789&amp;page=1&amp;pageSize=1000&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取任意一个成员" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">rand_member</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.result[*].userId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取所有成员" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">all_member</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.result[*].userId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建用户分组-单人" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;groupName&quot;: &quot;${new_groupName}&quot;,&#xd;
	&quot;members&quot;: [{&#xd;
		&quot;userId&quot;: ${rand_member},&#xd;
	}],&#xd;
	&quot;isDefault&quot;: true&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/group/create-or-update-group?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取new_groupId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">new_groupId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户分组-获取用户分组列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/group/list-group?_t=1593689524270&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言新增分组存在" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-565053714">&quot;id&quot;:${new_groupId}</stringProp>
                  <stringProp name="-1283585888">&quot;userId&quot;:${rand_member}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑用户分组-多人" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;groupName&quot;: &quot;${edit_groupName}&quot;,&#xd;
	&quot;members&quot;:${group_members},&#xd;
	&quot;isDefault&quot;: false,&#xd;
	&quot;id&quot;: ${new_groupId}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/group/create-or-update-group?projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="请求头信息-application/json" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;
import java.util.Arrays;

//设置权限： {&quot;34&quot;:&quot;1&quot;,&quot;35&quot;:&quot;0&quot;,&quot;37&quot;:&quot;1&quot;}

int count=Integer.parseInt(vars.get(&quot;all_member_matchNr&quot;));
log.info(&quot;count&quot;+count);
JSONArray members=new JSONArray();
int edit_group_count=0;
for (int i=1;i&lt;=count;i++){
	if (i%2==0){
		userId=Integer.parseInt(vars.get(&quot;all_member_&quot;+i));
		JSONObject member= new JSONObject();
		member.put(&quot;userId&quot;,userId);
		members.add(member);
		edit_group_count++;
		}
	}
log.info(members.toJSONString());
vars.put(&quot;group_members&quot;,members.toJSONString());
vars.put(&quot;edit_group_count&quot;,Integer.toString(edit_group_count));
//JSONArray event=JSONObject.parseObject(resp).getJSONObject(&quot;data&quot;).getJSONArray(&quot;eventGroups&quot;).getJSONObject(0).getJSONArray(&quot;events&quot;);
//int size=event.size();
//log.info(&quot;size&quot;+size);
//int edit_count=0;
//for(int i=0;i&lt;size;i++){
//	if (i%2==0){
//		event.getJSONObject(i).put(&quot;isDisPlay&quot;,1);
//		edit_count++;
//		}
//	else{
//		event.getJSONObject(i).put(&quot;isDisPlay&quot;,0);
//		}
//}
//log.info(&quot;edit_event &quot;+event.toJSONString());
//log.info(&quot;edit_count &quot;+edit_count);
//vars.put(&quot;edit_event&quot;,event.toJSONString());
//vars.put(&quot;edit_count&quot;,Integer.toString(edit_count));
	
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC 后置处理程序" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query"> SELECT user_id from ta.auth_user_group_member where  group_id=${new_groupId};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">group_userId</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言用户个数正确" enabled="true">
                <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONArray;

int count=Integer.parseInt(vars.get(&quot;edit_group_count&quot;));
int user_count=Integer.parseInt(vars.get(&quot;group_userId_#&quot;));
log.info(&quot;user_count&quot;+user_count);

if(count!=user_count){
	failure=true;
	}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除用户分组" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v1/ta/auth/group/delete-group?groupId=${new_groupId}&amp;projectId=${projectId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言return_code=0" enabled="true">
                <stringProp name="JSON_PATH">$.return_code</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
